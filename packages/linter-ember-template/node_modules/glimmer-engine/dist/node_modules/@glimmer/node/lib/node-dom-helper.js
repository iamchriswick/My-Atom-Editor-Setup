"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var runtime_1 = require("@glimmer/runtime");
var NodeDOMTreeConstruction = (function (_super) {
    __extends(NodeDOMTreeConstruction, _super);
    function NodeDOMTreeConstruction(doc) {
        return _super.call(this, doc) || this;
    }
    // override to prevent usage of `this.document` until after the constructor
    NodeDOMTreeConstruction.prototype.setupUselessElement = function () { };
    NodeDOMTreeConstruction.prototype.insertHTMLBefore = function (parent, html, reference) {
        var prev = reference ? reference.previousSibling : parent.lastChild;
        var raw = this.document.createRawHTMLSection(html);
        parent.insertBefore(raw, reference);
        var first = prev ? prev.nextSibling : parent.firstChild;
        var last = reference ? reference.previousSibling : parent.lastChild;
        return new runtime_1.ConcreteBounds(parent, first, last);
    };
    // override to avoid SVG detection/work when in node (this is not needed in SSR)
    NodeDOMTreeConstruction.prototype.createElement = function (tag) {
        return this.document.createElement(tag);
    };
    // override to avoid namespace shenanigans when in node (this is not needed in SSR)
    NodeDOMTreeConstruction.prototype.setAttribute = function (element, name, value) {
        element.setAttribute(name, value);
    };
    return NodeDOMTreeConstruction;
}(runtime_1.DOMTreeConstruction));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = NodeDOMTreeConstruction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS1kb20taGVscGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQGdsaW1tZXIvbm9kZS9saWIvbm9kZS1kb20taGVscGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLDRDQUF1RjtBQUV2RjtJQUFxRCwyQ0FBbUI7SUFFdEUsaUNBQVksR0FBb0I7ZUFDOUIsa0JBQU0sR0FBRyxDQUFDO0lBQ1osQ0FBQztJQUVELDJFQUEyRTtJQUNqRSxxREFBbUIsR0FBN0IsY0FBa0MsQ0FBQztJQUVuQyxrREFBZ0IsR0FBaEIsVUFBaUIsTUFBc0IsRUFBRSxJQUFZLEVBQUUsU0FBc0I7UUFDM0UsSUFBSSxJQUFJLEdBQUcsU0FBUyxHQUFHLFNBQVMsQ0FBQyxlQUFlLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUVwRSxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25ELE1BQU0sQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBRXBDLElBQUksS0FBSyxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUM7UUFDeEQsSUFBSSxJQUFJLEdBQUcsU0FBUyxHQUFHLFNBQVMsQ0FBQyxlQUFlLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUVwRSxNQUFNLENBQUMsSUFBSSx3QkFBYyxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELGdGQUFnRjtJQUNoRiwrQ0FBYSxHQUFiLFVBQWMsR0FBVztRQUN2QixNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELG1GQUFtRjtJQUNuRiw4Q0FBWSxHQUFaLFVBQWEsT0FBZ0IsRUFBRSxJQUFZLEVBQUUsS0FBYTtRQUN4RCxPQUFPLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBQ0gsOEJBQUM7QUFBRCxDQUFDLEFBOUJELENBQXFELDZCQUFtQixHQThCdkUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBTaW1wbGVET00gZnJvbSAnc2ltcGxlLWRvbSc7XG5pbXBvcnQgeyBET01UcmVlQ29uc3RydWN0aW9uLCBCb3VuZHMsIFNpbXBsZSwgQ29uY3JldGVCb3VuZHMgfSBmcm9tICdAZ2xpbW1lci9ydW50aW1lJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm9kZURPTVRyZWVDb25zdHJ1Y3Rpb24gZXh0ZW5kcyBET01UcmVlQ29uc3RydWN0aW9uIHtcbiAgcHJvdGVjdGVkIGRvY3VtZW50OiBTaW1wbGVET00uRG9jdW1lbnQ7XG4gIGNvbnN0cnVjdG9yKGRvYzogU2ltcGxlLkRvY3VtZW50KSB7XG4gICAgc3VwZXIoZG9jKTtcbiAgfVxuXG4gIC8vIG92ZXJyaWRlIHRvIHByZXZlbnQgdXNhZ2Ugb2YgYHRoaXMuZG9jdW1lbnRgIHVudGlsIGFmdGVyIHRoZSBjb25zdHJ1Y3RvclxuICBwcm90ZWN0ZWQgc2V0dXBVc2VsZXNzRWxlbWVudCgpIHsgfVxuXG4gIGluc2VydEhUTUxCZWZvcmUocGFyZW50OiBTaW1wbGUuRWxlbWVudCwgaHRtbDogc3RyaW5nLCByZWZlcmVuY2U6IFNpbXBsZS5Ob2RlKTogQm91bmRzIHtcbiAgICBsZXQgcHJldiA9IHJlZmVyZW5jZSA/IHJlZmVyZW5jZS5wcmV2aW91c1NpYmxpbmcgOiBwYXJlbnQubGFzdENoaWxkO1xuXG4gICAgbGV0IHJhdyA9IHRoaXMuZG9jdW1lbnQuY3JlYXRlUmF3SFRNTFNlY3Rpb24oaHRtbCk7XG4gICAgcGFyZW50Lmluc2VydEJlZm9yZShyYXcsIHJlZmVyZW5jZSk7XG5cbiAgICBsZXQgZmlyc3QgPSBwcmV2ID8gcHJldi5uZXh0U2libGluZyA6IHBhcmVudC5maXJzdENoaWxkO1xuICAgIGxldCBsYXN0ID0gcmVmZXJlbmNlID8gcmVmZXJlbmNlLnByZXZpb3VzU2libGluZyA6IHBhcmVudC5sYXN0Q2hpbGQ7XG5cbiAgICByZXR1cm4gbmV3IENvbmNyZXRlQm91bmRzKHBhcmVudCwgZmlyc3QsIGxhc3QpO1xuICB9XG5cbiAgLy8gb3ZlcnJpZGUgdG8gYXZvaWQgU1ZHIGRldGVjdGlvbi93b3JrIHdoZW4gaW4gbm9kZSAodGhpcyBpcyBub3QgbmVlZGVkIGluIFNTUilcbiAgY3JlYXRlRWxlbWVudCh0YWc6IHN0cmluZykge1xuICAgIHJldHVybiB0aGlzLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcbiAgfVxuXG4gIC8vIG92ZXJyaWRlIHRvIGF2b2lkIG5hbWVzcGFjZSBzaGVuYW5pZ2FucyB3aGVuIGluIG5vZGUgKHRoaXMgaXMgbm90IG5lZWRlZCBpbiBTU1IpXG4gIHNldEF0dHJpYnV0ZShlbGVtZW50OiBFbGVtZW50LCBuYW1lOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpIHtcbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gIH1cbn1cbiJdfQ==