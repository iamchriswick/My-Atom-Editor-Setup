"use strict";
var syntax_1 = require("@glimmer/syntax");
function compareWalkedNodes(html, expected) {
    var ast = syntax_1.preprocess(html);
    var walker = new syntax_1.Walker();
    var nodes = [];
    walker.visit(ast, function (node) {
        nodes.push(node.type);
    });
    deepEqual(nodes, expected);
}
QUnit.module('[glimmer-syntax] (Legacy) Traversal - Walker');
test('walks elements', function () {
    compareWalkedNodes('<div><li></li></div>', [
        'Program',
        'ElementNode',
        'ElementNode'
    ]);
});
test('walks blocks', function () {
    compareWalkedNodes('{{#foo}}<li></li>{{/foo}}', [
        'Program',
        'BlockStatement',
        'Program',
        'ElementNode'
    ]);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Fsa2VyLW5vZGUtdGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkBnbGltbWVyL3N5bnRheC90ZXN0cy90cmF2ZXJzYWwvd2Fsa2VyLW5vZGUtdGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsMENBQThEO0FBRTlELDRCQUE0QixJQUFJLEVBQUUsUUFBUTtJQUN4QyxJQUFJLEdBQUcsR0FBRyxtQkFBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RCLElBQUksTUFBTSxHQUFHLElBQUksZUFBTSxFQUFFLENBQUM7SUFDMUIsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBRWYsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsVUFBUyxJQUFJO1FBQzdCLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hCLENBQUMsQ0FBQyxDQUFDO0lBRUgsU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztBQUM3QixDQUFDO0FBRUQsS0FBSyxDQUFDLE1BQU0sQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO0FBRTdELElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtJQUNyQixrQkFBa0IsQ0FBQyxzQkFBc0IsRUFBRTtRQUN6QyxTQUFTO1FBQ1QsYUFBYTtRQUNiLGFBQWE7S0FDZCxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQztBQUVILElBQUksQ0FBQyxjQUFjLEVBQUU7SUFDbkIsa0JBQWtCLENBQUMsMkJBQTJCLEVBQUU7UUFDOUMsU0FBUztRQUNULGdCQUFnQjtRQUNoQixTQUFTO1FBQ1QsYUFBYTtLQUNkLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJlcHJvY2VzcyBhcyBwYXJzZSwgV2Fsa2VyIH0gZnJvbSBcIkBnbGltbWVyL3N5bnRheFwiO1xuXG5mdW5jdGlvbiBjb21wYXJlV2Fsa2VkTm9kZXMoaHRtbCwgZXhwZWN0ZWQpIHtcbiAgbGV0IGFzdCA9IHBhcnNlKGh0bWwpO1xuICBsZXQgd2Fsa2VyID0gbmV3IFdhbGtlcigpO1xuICBsZXQgbm9kZXMgPSBbXTtcblxuICB3YWxrZXIudmlzaXQoYXN0LCBmdW5jdGlvbihub2RlKSB7XG4gICAgbm9kZXMucHVzaChub2RlLnR5cGUpO1xuICB9KTtcblxuICBkZWVwRXF1YWwobm9kZXMsIGV4cGVjdGVkKTtcbn1cblxuUVVuaXQubW9kdWxlKCdbZ2xpbW1lci1zeW50YXhdIChMZWdhY3kpIFRyYXZlcnNhbCAtIFdhbGtlcicpO1xuXG50ZXN0KCd3YWxrcyBlbGVtZW50cycsIGZ1bmN0aW9uKCkge1xuICBjb21wYXJlV2Fsa2VkTm9kZXMoJzxkaXY+PGxpPjwvbGk+PC9kaXY+JywgW1xuICAgICdQcm9ncmFtJyxcbiAgICAnRWxlbWVudE5vZGUnLFxuICAgICdFbGVtZW50Tm9kZSdcbiAgXSk7XG59KTtcblxudGVzdCgnd2Fsa3MgYmxvY2tzJywgZnVuY3Rpb24oKSB7XG4gIGNvbXBhcmVXYWxrZWROb2Rlcygne3sjZm9vfX08bGk+PC9saT57ey9mb299fScsIFtcbiAgICAnUHJvZ3JhbScsXG4gICAgJ0Jsb2NrU3RhdGVtZW50JyxcbiAgICAnUHJvZ3JhbScsXG4gICAgJ0VsZW1lbnROb2RlJ1xuICBdKTtcbn0pO1xuIl19