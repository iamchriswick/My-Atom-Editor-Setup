"use strict";
var test_helpers_1 = require("@glimmer/test-helpers");
var test_helpers_2 = require("@glimmer/test-helpers");
var compiler_1 = require("@glimmer/compiler");
var env;
QUnit.module('Compile options', {
    setup: function () {
        env = new test_helpers_2.TestEnvironment();
    }
});
QUnit.test('moduleName option is passed into meta', function () {
    var moduleName = 'It ain\'t hard to tell';
    var template = test_helpers_1.compile('Hi, {{name}}!', {
        env: env,
        meta: {
            moduleName: moduleName
        }
    });
    equal(template.meta.moduleName, moduleName, 'Template has the moduleName');
});
QUnit.module('precompile', {
    setup: function () {
        env = new test_helpers_2.TestEnvironment();
    }
});
QUnit.test('returned meta is correct', function () {
    var wire = JSON.parse(compiler_1.precompile('Hi, {{name}}!', {
        meta: {
            moduleName: 'my/module-name',
            metaIsOpaque: 'yes'
        }
    }));
    equal(wire.meta.moduleName, 'my/module-name', 'Template has correct meta');
    equal(wire.meta.metaIsOpaque, 'yes', 'Template has correct meta');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGlsZS1vcHRpb25zLXRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJAZ2xpbW1lci9jb21waWxlci90ZXN0cy9jb21waWxlLW9wdGlvbnMtdGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0RBQWdEO0FBQ2hELHNEQUF3RDtBQUN4RCw4Q0FBK0M7QUFFL0MsSUFBSSxHQUFvQixDQUFDO0FBRXpCLEtBQUssQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEVBQUU7SUFDOUIsS0FBSztRQUNILEdBQUcsR0FBRyxJQUFJLDhCQUFlLEVBQUUsQ0FBQztJQUM5QixDQUFDO0NBQ0YsQ0FBQyxDQUFDO0FBRUgsS0FBSyxDQUFDLElBQUksQ0FBQyx1Q0FBdUMsRUFBRTtJQUNsRCxJQUFJLFVBQVUsR0FBRyx3QkFBd0IsQ0FBQztJQUMxQyxJQUFJLFFBQVEsR0FBRyxzQkFBTyxDQUFDLGVBQWUsRUFBRTtRQUN0QyxHQUFHLEtBQUE7UUFDSCxJQUFJLEVBQUU7WUFDSixVQUFVLFlBQUE7U0FDWDtLQUNGLENBQUMsQ0FBQztJQUNILEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxVQUFVLEVBQUUsNkJBQTZCLENBQUMsQ0FBQztBQUM3RSxDQUFDLENBQUMsQ0FBQztBQUVILEtBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFO0lBQ3pCLEtBQUs7UUFDSCxHQUFHLEdBQUcsSUFBSSw4QkFBZSxFQUFFLENBQUM7SUFDOUIsQ0FBQztDQUNGLENBQUMsQ0FBQztBQUVILEtBQUssQ0FBQyxJQUFJLENBQUMsMEJBQTBCLEVBQUU7SUFDckMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxxQkFBVSxDQUFDLGVBQWUsRUFBRTtRQUNoRCxJQUFJLEVBQUU7WUFDSixVQUFVLEVBQUUsZ0JBQWdCO1lBQzVCLFlBQVksRUFBRSxLQUFLO1NBQ3BCO0tBQ0YsQ0FBQyxDQUFDLENBQUM7SUFFSixLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsMkJBQTJCLENBQUMsQ0FBQztJQUMzRSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsS0FBSyxFQUFFLDJCQUEyQixDQUFDLENBQUM7QUFDcEUsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21waWxlIH0gZnJvbSBcIkBnbGltbWVyL3Rlc3QtaGVscGVyc1wiO1xuaW1wb3J0IHsgVGVzdEVudmlyb25tZW50IH0gZnJvbSBcIkBnbGltbWVyL3Rlc3QtaGVscGVyc1wiO1xuaW1wb3J0IHsgcHJlY29tcGlsZSB9IGZyb20gXCJAZ2xpbW1lci9jb21waWxlclwiO1xuXG5sZXQgZW52OiBUZXN0RW52aXJvbm1lbnQ7XG5cblFVbml0Lm1vZHVsZSgnQ29tcGlsZSBvcHRpb25zJywge1xuICBzZXR1cCgpIHtcbiAgICBlbnYgPSBuZXcgVGVzdEVudmlyb25tZW50KCk7XG4gIH1cbn0pO1xuXG5RVW5pdC50ZXN0KCdtb2R1bGVOYW1lIG9wdGlvbiBpcyBwYXNzZWQgaW50byBtZXRhJywgZnVuY3Rpb24oKSB7XG4gIGxldCBtb2R1bGVOYW1lID0gJ0l0IGFpblxcJ3QgaGFyZCB0byB0ZWxsJztcbiAgbGV0IHRlbXBsYXRlID0gY29tcGlsZSgnSGksIHt7bmFtZX19IScsIHtcbiAgICBlbnYsXG4gICAgbWV0YToge1xuICAgICAgbW9kdWxlTmFtZVxuICAgIH1cbiAgfSk7XG4gIGVxdWFsKHRlbXBsYXRlLm1ldGEubW9kdWxlTmFtZSwgbW9kdWxlTmFtZSwgJ1RlbXBsYXRlIGhhcyB0aGUgbW9kdWxlTmFtZScpO1xufSk7XG5cblFVbml0Lm1vZHVsZSgncHJlY29tcGlsZScsIHtcbiAgc2V0dXAoKSB7XG4gICAgZW52ID0gbmV3IFRlc3RFbnZpcm9ubWVudCgpO1xuICB9XG59KTtcblxuUVVuaXQudGVzdCgncmV0dXJuZWQgbWV0YSBpcyBjb3JyZWN0JywgZnVuY3Rpb24oKSB7XG4gIGxldCB3aXJlID0gSlNPTi5wYXJzZShwcmVjb21waWxlKCdIaSwge3tuYW1lfX0hJywge1xuICAgIG1ldGE6IHtcbiAgICAgIG1vZHVsZU5hbWU6ICdteS9tb2R1bGUtbmFtZScsXG4gICAgICBtZXRhSXNPcGFxdWU6ICd5ZXMnXG4gICAgfVxuICB9KSk7XG5cbiAgZXF1YWwod2lyZS5tZXRhLm1vZHVsZU5hbWUsICdteS9tb2R1bGUtbmFtZScsICdUZW1wbGF0ZSBoYXMgY29ycmVjdCBtZXRhJyk7XG4gIGVxdWFsKHdpcmUubWV0YS5tZXRhSXNPcGFxdWUsICd5ZXMnLCAnVGVtcGxhdGUgaGFzIGNvcnJlY3QgbWV0YScpO1xufSk7XG4iXX0=