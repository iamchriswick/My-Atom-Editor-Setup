"use strict";
var test_helpers_1 = require("@glimmer/test-helpers");
var env;
QUnit.module("Compile errors", {
    setup: function () {
        env = new test_helpers_1.TestEnvironment();
    }
});
QUnit.test('context switching using ../ is not allowed', function (assert) {
    assert.throws(function () {
        env.compile('<div><p>{{../value}}</p></div>');
    }, new Error("Changing context using \"../\" is not supported in Glimmer: \"../value\" on line 1."));
});
QUnit.test('mixing . and / is not allowed', function (assert) {
    assert.throws(function () {
        env.compile('<div><p>{{a/b.c}}</p></div>');
    }, new Error("Mixing '.' and '/' in paths is not supported in Glimmer; use only '.' to separate property paths: \"a/b.c\" on line 1."));
});
QUnit.test('explicit self ref with ./ is not allowed', function (assert) {
    assert.throws(function () {
        env.compile('<div><p>{{./value}}</p></div>');
    }, new Error("Using \"./\" is not supported in Glimmer and unnecessary: \"./value\" on line 1."), "should throw error");
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGlsZS1lcnJvcnMtdGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkBnbGltbWVyL3J1bnRpbWUvdGVzdHMvY29tcGlsZS1lcnJvcnMtdGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsc0RBQXdEO0FBRXhELElBQUksR0FBb0IsQ0FBQztBQUV6QixLQUFLLENBQUMsTUFBTSxDQUFDLGdCQUFnQixFQUFFO0lBQzdCLEtBQUs7UUFDSCxHQUFHLEdBQUcsSUFBSSw4QkFBZSxFQUFFLENBQUM7SUFDOUIsQ0FBQztDQUNGLENBQUMsQ0FBQztBQUVILEtBQUssQ0FBQyxJQUFJLENBQUMsNENBQTRDLEVBQUUsVUFBQSxNQUFNO0lBQzdELE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDWixHQUFHLENBQUMsT0FBTyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7SUFDaEQsQ0FBQyxFQUFFLElBQUksS0FBSyxDQUFDLHFGQUFxRixDQUFDLENBQUMsQ0FBQztBQUN2RyxDQUFDLENBQUMsQ0FBQztBQUVILEtBQUssQ0FBQyxJQUFJLENBQUMsK0JBQStCLEVBQUUsVUFBQSxNQUFNO0lBQ2hELE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDWixHQUFHLENBQUMsT0FBTyxDQUFDLDZCQUE2QixDQUFDLENBQUM7SUFDN0MsQ0FBQyxFQUFFLElBQUksS0FBSyxDQUFDLHdIQUF3SCxDQUFDLENBQUMsQ0FBQztBQUMxSSxDQUFDLENBQUMsQ0FBQztBQUVILEtBQUssQ0FBQyxJQUFJLENBQUMsMENBQTBDLEVBQUUsVUFBQSxNQUFNO0lBQzNELE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDWixHQUFHLENBQUMsT0FBTyxDQUFDLCtCQUErQixDQUFDLENBQUM7SUFDL0MsQ0FBQyxFQUFFLElBQUksS0FBSyxDQUFDLGtGQUFrRixDQUFDLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztBQUMxSCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRlc3RFbnZpcm9ubWVudCB9IGZyb20gXCJAZ2xpbW1lci90ZXN0LWhlbHBlcnNcIjtcblxubGV0IGVudjogVGVzdEVudmlyb25tZW50O1xuXG5RVW5pdC5tb2R1bGUoXCJDb21waWxlIGVycm9yc1wiLCB7XG4gIHNldHVwKCkge1xuICAgIGVudiA9IG5ldyBUZXN0RW52aXJvbm1lbnQoKTtcbiAgfVxufSk7XG5cblFVbml0LnRlc3QoJ2NvbnRleHQgc3dpdGNoaW5nIHVzaW5nIC4uLyBpcyBub3QgYWxsb3dlZCcsIGFzc2VydCA9PiB7XG4gIGFzc2VydC50aHJvd3MoKCkgPT4ge1xuICAgIGVudi5jb21waWxlKCc8ZGl2PjxwPnt7Li4vdmFsdWV9fTwvcD48L2Rpdj4nKTtcbiAgfSwgbmV3IEVycm9yKFwiQ2hhbmdpbmcgY29udGV4dCB1c2luZyBcXFwiLi4vXFxcIiBpcyBub3Qgc3VwcG9ydGVkIGluIEdsaW1tZXI6IFxcXCIuLi92YWx1ZVxcXCIgb24gbGluZSAxLlwiKSk7XG59KTtcblxuUVVuaXQudGVzdCgnbWl4aW5nIC4gYW5kIC8gaXMgbm90IGFsbG93ZWQnLCBhc3NlcnQgPT4ge1xuICBhc3NlcnQudGhyb3dzKCgpID0+IHtcbiAgICBlbnYuY29tcGlsZSgnPGRpdj48cD57e2EvYi5jfX08L3A+PC9kaXY+Jyk7XG4gIH0sIG5ldyBFcnJvcihcIk1peGluZyAnLicgYW5kICcvJyBpbiBwYXRocyBpcyBub3Qgc3VwcG9ydGVkIGluIEdsaW1tZXI7IHVzZSBvbmx5ICcuJyB0byBzZXBhcmF0ZSBwcm9wZXJ0eSBwYXRoczogXFxcImEvYi5jXFxcIiBvbiBsaW5lIDEuXCIpKTtcbn0pO1xuXG5RVW5pdC50ZXN0KCdleHBsaWNpdCBzZWxmIHJlZiB3aXRoIC4vIGlzIG5vdCBhbGxvd2VkJywgYXNzZXJ0ID0+IHtcbiAgYXNzZXJ0LnRocm93cygoKSA9PiB7XG4gICAgZW52LmNvbXBpbGUoJzxkaXY+PHA+e3suL3ZhbHVlfX08L3A+PC9kaXY+Jyk7XG4gIH0sIG5ldyBFcnJvcihcIlVzaW5nIFxcXCIuL1xcXCIgaXMgbm90IHN1cHBvcnRlZCBpbiBHbGltbWVyIGFuZCB1bm5lY2Vzc2FyeTogXFxcIi4vdmFsdWVcXFwiIG9uIGxpbmUgMS5cIiksIFwic2hvdWxkIHRocm93IGVycm9yXCIpO1xufSk7XG4iXX0=