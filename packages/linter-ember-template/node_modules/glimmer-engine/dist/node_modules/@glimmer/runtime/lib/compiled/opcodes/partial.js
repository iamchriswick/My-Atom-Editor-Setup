"use strict";
var reference_1 = require("@glimmer/reference");
var vm_1 = require("./vm");
var opcodes_1 = require("../../opcodes");
opcodes_1.APPEND_OPCODES.add(opcodes_1.OpcodeName.PutDynamicPartial, function (vm, _a) {
    var _symbolTable = _a.op1;
    var env = vm.env;
    var symbolTable = vm.constants.getOther(_symbolTable);
    function lookupPartial(name) {
        var normalized = String(name);
        if (!env.hasPartial(normalized, symbolTable)) {
            throw new Error("Could not find a partial named \"" + normalized + "\"");
        }
        return env.lookupPartial(normalized, symbolTable);
    }
    var reference = reference_1.map(vm.frame.getOperand(), lookupPartial);
    var cache = reference_1.isConst(reference) ? undefined : new reference_1.ReferenceCache(reference);
    var definition = cache ? cache.peek() : reference.value();
    vm.frame.setImmediate(definition);
    if (cache) {
        vm.updateWith(new vm_1.Assert(cache));
    }
});
opcodes_1.APPEND_OPCODES.add(opcodes_1.OpcodeName.PutPartial, function (vm, _a) {
    var _definition = _a.op1;
    var definition = vm.constants.getOther(_definition);
    vm.frame.setImmediate(definition);
});
opcodes_1.APPEND_OPCODES.add(opcodes_1.OpcodeName.EvaluatePartial, function (vm, _a) {
    var _symbolTable = _a.op1, _cache = _a.op2;
    var symbolTable = vm.constants.getOther(_symbolTable);
    var cache = vm.constants.getOther(_cache);
    var template = vm.frame.getImmediate().template;
    var block = cache[template.id];
    if (!block) {
        block = template.asPartial(symbolTable);
    }
    vm.invokePartial(block);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFydGlhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkBnbGltbWVyL3J1bnRpbWUvbGliL2NvbXBpbGVkL29wY29kZXMvcGFydGlhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0RBQWtFO0FBQ2xFLDJCQUE4QjtBQUk5Qix5Q0FBaUU7QUFFakUsd0JBQWMsQ0FBQyxHQUFHLENBQUMsb0JBQUUsQ0FBQyxpQkFBaUIsRUFBRSxVQUFDLEVBQUUsRUFBRSxFQUFxQjtRQUFuQixxQkFBaUI7SUFDL0QsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQztJQUNqQixJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBYyxZQUFZLENBQUMsQ0FBQztJQUVuRSx1QkFBdUIsSUFBWTtRQUNqQyxJQUFJLFVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFOUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDN0MsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQ0FBbUMsVUFBVSxPQUFHLENBQUMsQ0FBQztRQUNwRSxDQUFDO1FBRUQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFRCxJQUFJLFNBQVMsR0FBRyxlQUFHLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQVUsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUNsRSxJQUFJLEtBQUssR0FBRyxtQkFBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLFNBQVMsR0FBRyxJQUFJLDBCQUFjLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDM0UsSUFBSSxVQUFVLEdBQUcsS0FBSyxHQUFHLEtBQUssQ0FBQyxJQUFJLEVBQUUsR0FBRyxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7SUFFMUQsRUFBRSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQUM7SUFFbEMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNWLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxXQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUNuQyxDQUFDO0FBQ0gsQ0FBQyxDQUFDLENBQUM7QUFFSCx3QkFBYyxDQUFDLEdBQUcsQ0FBQyxvQkFBRSxDQUFDLFVBQVUsRUFBRSxVQUFDLEVBQUUsRUFBRSxFQUFvQjtRQUFsQixvQkFBZ0I7SUFDdkQsSUFBSSxVQUFVLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQTRCLFdBQVcsQ0FBQyxDQUFDO0lBQy9FLEVBQUUsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3BDLENBQUMsQ0FBQyxDQUFDO0FBRUgsd0JBQWMsQ0FBQyxHQUFHLENBQUMsb0JBQUUsQ0FBQyxlQUFlLEVBQUUsVUFBQyxFQUFFLEVBQUUsRUFBa0M7UUFBaEMscUJBQWlCLEVBQUUsZUFBVztJQUMxRSxJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBYyxZQUFZLENBQUMsQ0FBQztJQUNuRSxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBcUIsTUFBTSxDQUFDLENBQUM7SUFFeEQsSUFBQSwyQ0FBUSxDQUF3RDtJQUV0RSxJQUFJLEtBQUssR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRS9CLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNYLEtBQUssR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxFQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzFCLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3BhcXVlLCBEaWN0IH0gZnJvbSAnQGdsaW1tZXIvdXRpbCc7XG5pbXBvcnQgeyBSZWZlcmVuY2VDYWNoZSwgaXNDb25zdCwgbWFwIH0gZnJvbSAnQGdsaW1tZXIvcmVmZXJlbmNlJztcbmltcG9ydCB7IEFzc2VydCB9IGZyb20gJy4vdm0nO1xuaW1wb3J0IHsgUGFydGlhbERlZmluaXRpb24gfSBmcm9tICcuLi8uLi9wYXJ0aWFsJztcbmltcG9ydCB7IFN5bWJvbFRhYmxlIH0gZnJvbSAnQGdsaW1tZXIvaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBQYXJ0aWFsQmxvY2sgfSBmcm9tICcuLi8uLi9zY2FubmVyJztcbmltcG9ydCB7IEFQUEVORF9PUENPREVTLCBPcGNvZGVOYW1lIGFzIE9wIH0gZnJvbSAnLi4vLi4vb3Bjb2Rlcyc7XG5cbkFQUEVORF9PUENPREVTLmFkZChPcC5QdXREeW5hbWljUGFydGlhbCwgKHZtLCB7IG9wMTogX3N5bWJvbFRhYmxlIH0pID0+IHtcbiAgbGV0IGVudiA9IHZtLmVudjtcbiAgbGV0IHN5bWJvbFRhYmxlID0gdm0uY29uc3RhbnRzLmdldE90aGVyPFN5bWJvbFRhYmxlPihfc3ltYm9sVGFibGUpO1xuXG4gIGZ1bmN0aW9uIGxvb2t1cFBhcnRpYWwobmFtZTogT3BhcXVlKSB7XG4gICAgbGV0IG5vcm1hbGl6ZWQgPSBTdHJpbmcobmFtZSk7XG5cbiAgICBpZiAoIWVudi5oYXNQYXJ0aWFsKG5vcm1hbGl6ZWQsIHN5bWJvbFRhYmxlKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb3VsZCBub3QgZmluZCBhIHBhcnRpYWwgbmFtZWQgXCIke25vcm1hbGl6ZWR9XCJgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZW52Lmxvb2t1cFBhcnRpYWwobm9ybWFsaXplZCwgc3ltYm9sVGFibGUpO1xuICB9XG5cbiAgbGV0IHJlZmVyZW5jZSA9IG1hcCh2bS5mcmFtZS5nZXRPcGVyYW5kPE9wYXF1ZT4oKSwgbG9va3VwUGFydGlhbCk7XG4gIGxldCBjYWNoZSA9IGlzQ29uc3QocmVmZXJlbmNlKSA/IHVuZGVmaW5lZCA6IG5ldyBSZWZlcmVuY2VDYWNoZShyZWZlcmVuY2UpO1xuICBsZXQgZGVmaW5pdGlvbiA9IGNhY2hlID8gY2FjaGUucGVlaygpIDogcmVmZXJlbmNlLnZhbHVlKCk7XG5cbiAgdm0uZnJhbWUuc2V0SW1tZWRpYXRlKGRlZmluaXRpb24pO1xuXG4gIGlmIChjYWNoZSkge1xuICAgIHZtLnVwZGF0ZVdpdGgobmV3IEFzc2VydChjYWNoZSkpO1xuICB9XG59KTtcblxuQVBQRU5EX09QQ09ERVMuYWRkKE9wLlB1dFBhcnRpYWwsICh2bSwgeyBvcDE6IF9kZWZpbml0aW9uIH0pID0+IHtcbiAgbGV0IGRlZmluaXRpb24gPSB2bS5jb25zdGFudHMuZ2V0T3RoZXI8UGFydGlhbERlZmluaXRpb248T3BhcXVlPj4oX2RlZmluaXRpb24pO1xuICB2bS5mcmFtZS5zZXRJbW1lZGlhdGUoZGVmaW5pdGlvbik7XG59KTtcblxuQVBQRU5EX09QQ09ERVMuYWRkKE9wLkV2YWx1YXRlUGFydGlhbCwgKHZtLCB7IG9wMTogX3N5bWJvbFRhYmxlLCBvcDI6IF9jYWNoZSB9KSA9PiB7XG4gIGxldCBzeW1ib2xUYWJsZSA9IHZtLmNvbnN0YW50cy5nZXRPdGhlcjxTeW1ib2xUYWJsZT4oX3N5bWJvbFRhYmxlKTtcbiAgbGV0IGNhY2hlID0gdm0uY29uc3RhbnRzLmdldE90aGVyPERpY3Q8UGFydGlhbEJsb2NrPj4oX2NhY2hlKTtcblxuICBsZXQgeyB0ZW1wbGF0ZSB9ID0gdm0uZnJhbWUuZ2V0SW1tZWRpYXRlPFBhcnRpYWxEZWZpbml0aW9uPE9wYXF1ZT4+KCk7XG5cbiAgbGV0IGJsb2NrID0gY2FjaGVbdGVtcGxhdGUuaWRdO1xuXG4gIGlmICghYmxvY2spIHtcbiAgICBibG9jayA9IHRlbXBsYXRlLmFzUGFydGlhbChzeW1ib2xUYWJsZSk7XG4gIH1cblxuICB2bS5pbnZva2VQYXJ0aWFsKGJsb2NrKTtcbn0pO1xuIl19