"use strict";
var bounds_1 = require("../bounds");
var update_1 = require("./update");
var RenderResult = (function () {
    function RenderResult(env, updating, bounds) {
        this.env = env;
        this.updating = updating;
        this.bounds = bounds;
    }
    RenderResult.prototype.rerender = function (_a) {
        var _b = (_a === void 0 ? { alwaysRevalidate: false } : _a).alwaysRevalidate, alwaysRevalidate = _b === void 0 ? false : _b;
        var _c = this, env = _c.env, updating = _c.updating;
        var vm = new update_1.default(env, { alwaysRevalidate: alwaysRevalidate });
        vm.execute(updating, this);
    };
    RenderResult.prototype.parentElement = function () {
        return this.bounds.parentElement();
    };
    RenderResult.prototype.firstNode = function () {
        return this.bounds.firstNode();
    };
    RenderResult.prototype.lastNode = function () {
        return this.bounds.lastNode();
    };
    RenderResult.prototype.opcodes = function () {
        return this.updating;
    };
    RenderResult.prototype.handleException = function () {
        throw "this should never happen";
    };
    RenderResult.prototype.destroy = function () {
        this.bounds.destroy();
        bounds_1.clear(this.bounds);
    };
    return RenderResult;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = RenderResult;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyLXJlc3VsdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkBnbGltbWVyL3J1bnRpbWUvbGliL3ZtL3JlbmRlci1yZXN1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUVBLG9DQUFxRDtBQUNyRCxtQ0FBd0Q7QUFJeEQ7SUFDRSxzQkFDVSxHQUFnQixFQUNoQixRQUFvQyxFQUNwQyxNQUF5QjtRQUZ6QixRQUFHLEdBQUgsR0FBRyxDQUFhO1FBQ2hCLGFBQVEsR0FBUixRQUFRLENBQTRCO1FBQ3BDLFdBQU0sR0FBTixNQUFNLENBQW1CO0lBQ2hDLENBQUM7SUFFSiwrQkFBUSxHQUFSLFVBQVMsRUFBMEQ7WUFBeEQsd0VBQXdCLEVBQXhCLDZDQUF3QjtRQUM3QixJQUFBLFNBQXdCLEVBQXRCLFlBQUcsRUFBRSxzQkFBUSxDQUFVO1FBQzdCLElBQUksRUFBRSxHQUFHLElBQUksZ0JBQVUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxnQkFBZ0Isa0JBQUEsRUFBRSxDQUFDLENBQUM7UUFDbkQsRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELG9DQUFhLEdBQWI7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRUQsZ0NBQVMsR0FBVDtRQUNFLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ2pDLENBQUM7SUFFRCwrQkFBUSxHQUFSO1FBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVELDhCQUFPLEdBQVA7UUFDRSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRUQsc0NBQWUsR0FBZjtRQUNFLE1BQU0sMEJBQTBCLENBQUM7SUFDbkMsQ0FBQztJQUVELDhCQUFPLEdBQVA7UUFDRSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3RCLGNBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckIsQ0FBQztJQUNILG1CQUFDO0FBQUQsQ0FBQyxBQXJDRCxJQXFDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9wdGlvbiwgTGlua2VkTGlzdCB9IGZyb20gJ0BnbGltbWVyL3V0aWwnO1xuaW1wb3J0IEVudmlyb25tZW50IGZyb20gJy4uL2Vudmlyb25tZW50JztcbmltcG9ydCB7IERlc3Ryb3lhYmxlQm91bmRzLCBjbGVhciB9IGZyb20gJy4uL2JvdW5kcyc7XG5pbXBvcnQgVXBkYXRpbmdWTSwgeyBFeGNlcHRpb25IYW5kbGVyIH0gZnJvbSAnLi91cGRhdGUnO1xuaW1wb3J0IHsgVXBkYXRpbmdPcGNvZGUgfSBmcm9tICcuLi9vcGNvZGVzJztcbmltcG9ydCAqIGFzIFNpbXBsZSBmcm9tICcuLi9kb20vaW50ZXJmYWNlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlbmRlclJlc3VsdCBpbXBsZW1lbnRzIERlc3Ryb3lhYmxlQm91bmRzLCBFeGNlcHRpb25IYW5kbGVyIHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBlbnY6IEVudmlyb25tZW50LFxuICAgIHByaXZhdGUgdXBkYXRpbmc6IExpbmtlZExpc3Q8VXBkYXRpbmdPcGNvZGU+LFxuICAgIHByaXZhdGUgYm91bmRzOiBEZXN0cm95YWJsZUJvdW5kc1xuICApIHt9XG5cbiAgcmVyZW5kZXIoeyBhbHdheXNSZXZhbGlkYXRlID0gZmFsc2UgfSA9IHsgYWx3YXlzUmV2YWxpZGF0ZTogZmFsc2UgfSkge1xuICAgIGxldCB7IGVudiwgdXBkYXRpbmcgfSA9IHRoaXM7XG4gICAgbGV0IHZtID0gbmV3IFVwZGF0aW5nVk0oZW52LCB7IGFsd2F5c1JldmFsaWRhdGUgfSk7XG4gICAgdm0uZXhlY3V0ZSh1cGRhdGluZywgdGhpcyk7XG4gIH1cblxuICBwYXJlbnRFbGVtZW50KCk6IFNpbXBsZS5FbGVtZW50IHtcbiAgICByZXR1cm4gdGhpcy5ib3VuZHMucGFyZW50RWxlbWVudCgpO1xuICB9XG5cbiAgZmlyc3ROb2RlKCk6IE9wdGlvbjxTaW1wbGUuTm9kZT4ge1xuICAgIHJldHVybiB0aGlzLmJvdW5kcy5maXJzdE5vZGUoKTtcbiAgfVxuXG4gIGxhc3ROb2RlKCk6IE9wdGlvbjxTaW1wbGUuTm9kZT4ge1xuICAgIHJldHVybiB0aGlzLmJvdW5kcy5sYXN0Tm9kZSgpO1xuICB9XG5cbiAgb3Bjb2RlcygpOiBMaW5rZWRMaXN0PFVwZGF0aW5nT3Bjb2RlPiB7XG4gICAgcmV0dXJuIHRoaXMudXBkYXRpbmc7XG4gIH1cblxuICBoYW5kbGVFeGNlcHRpb24oKSB7XG4gICAgdGhyb3cgXCJ0aGlzIHNob3VsZCBuZXZlciBoYXBwZW5cIjtcbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5ib3VuZHMuZGVzdHJveSgpO1xuICAgIGNsZWFyKHRoaXMuYm91bmRzKTtcbiAgfVxufVxuIl19