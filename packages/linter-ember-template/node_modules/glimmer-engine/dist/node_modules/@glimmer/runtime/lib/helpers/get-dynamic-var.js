"use strict";
var reference_1 = require("@glimmer/reference");
var DynamicVarReference = (function () {
    function DynamicVarReference(scope, nameRef) {
        this.scope = scope;
        this.nameRef = nameRef;
        var varTag = this.varTag = new reference_1.UpdatableTag(reference_1.CONSTANT_TAG);
        this.tag = reference_1.combine([nameRef.tag, varTag]);
    }
    DynamicVarReference.prototype.value = function () {
        return this.getVar().value();
    };
    DynamicVarReference.prototype.get = function (key) {
        return this.getVar().get(key);
    };
    DynamicVarReference.prototype.getVar = function () {
        var name = String(this.nameRef.value());
        var ref = this.scope.get(name);
        this.varTag.update(ref.tag);
        return ref;
    };
    return DynamicVarReference;
}());
function getDynamicVar(vm, args, _symbolTable) {
    var scope = vm.dynamicScope();
    var nameRef = args.positional.at(0);
    return new DynamicVarReference(scope, nameRef);
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = getDynamicVar;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWR5bmFtaWMtdmFyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQGdsaW1tZXIvcnVudGltZS9saWIvaGVscGVycy9nZXQtZHluYW1pYy12YXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUlBLGdEQUFxRztBQUdyRztJQUlFLDZCQUFvQixLQUFtQixFQUFVLE9BQThCO1FBQTNELFVBQUssR0FBTCxLQUFLLENBQWM7UUFBVSxZQUFPLEdBQVAsT0FBTyxDQUF1QjtRQUM3RSxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksd0JBQVksQ0FBQyx3QkFBWSxDQUFDLENBQUM7UUFDMUQsSUFBSSxDQUFDLEdBQUcsR0FBRyxtQkFBTyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCxtQ0FBSyxHQUFMO1FBQ0UsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRUQsaUNBQUcsR0FBSCxVQUFJLEdBQVc7UUFDYixNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRU8sb0NBQU0sR0FBZDtRQUNFLElBQUksSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDeEMsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFL0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTVCLE1BQU0sQ0FBQyxHQUFHLENBQUM7SUFDYixDQUFDO0lBQ0gsMEJBQUM7QUFBRCxDQUFDLEFBekJELElBeUJDO0FBRUQsdUJBQXVCLEVBQVksRUFBRSxJQUFtQixFQUFFLFlBQXlCO0lBQ2pGLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUM5QixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVwQyxNQUFNLENBQUMsSUFBSSxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDakQsQ0FBQzs7QUFFRCxrQkFBZ0IsYUFBd0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhlbHBlciwgRHluYW1pY1Njb3BlIH0gZnJvbSAnLi4vZW52aXJvbm1lbnQnO1xuaW1wb3J0IHsgUHVibGljVk0gfSBmcm9tICcuLi92bS9hcHBlbmQnO1xuaW1wb3J0IHsgU3ltYm9sVGFibGUgfSBmcm9tICdAZ2xpbW1lci9pbnRlcmZhY2VzJztcbmltcG9ydCB7IEV2YWx1YXRlZEFyZ3MgfSBmcm9tICcuLi9jb21waWxlZC9leHByZXNzaW9ucy9hcmdzJztcbmltcG9ydCB7IENPTlNUQU5UX1RBRywgUmV2aXNpb25UYWcsIFBhdGhSZWZlcmVuY2UsIFVwZGF0YWJsZVRhZywgY29tYmluZSB9IGZyb20gJ0BnbGltbWVyL3JlZmVyZW5jZSc7XG5pbXBvcnQgeyBPcGFxdWUgfSBmcm9tICdAZ2xpbW1lci91dGlsJztcblxuY2xhc3MgRHluYW1pY1ZhclJlZmVyZW5jZSBpbXBsZW1lbnRzIFBhdGhSZWZlcmVuY2U8T3BhcXVlPiB7XG4gIHB1YmxpYyB0YWc6IFJldmlzaW9uVGFnO1xuICBwcml2YXRlIHZhclRhZzogVXBkYXRhYmxlVGFnO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2NvcGU6IER5bmFtaWNTY29wZSwgcHJpdmF0ZSBuYW1lUmVmOiBQYXRoUmVmZXJlbmNlPE9wYXF1ZT4pIHtcbiAgICBsZXQgdmFyVGFnID0gdGhpcy52YXJUYWcgPSBuZXcgVXBkYXRhYmxlVGFnKENPTlNUQU5UX1RBRyk7XG4gICAgdGhpcy50YWcgPSBjb21iaW5lKFtuYW1lUmVmLnRhZywgdmFyVGFnXSk7XG4gIH1cblxuICB2YWx1ZSgpOiBPcGFxdWUge1xuICAgIHJldHVybiB0aGlzLmdldFZhcigpLnZhbHVlKCk7XG4gIH1cblxuICBnZXQoa2V5OiBzdHJpbmcpOiBQYXRoUmVmZXJlbmNlPE9wYXF1ZT4ge1xuICAgIHJldHVybiB0aGlzLmdldFZhcigpLmdldChrZXkpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRWYXIoKTogUGF0aFJlZmVyZW5jZTxPcGFxdWU+IHtcbiAgICBsZXQgbmFtZSA9IFN0cmluZyh0aGlzLm5hbWVSZWYudmFsdWUoKSk7XG4gICAgbGV0IHJlZiA9IHRoaXMuc2NvcGUuZ2V0KG5hbWUpO1xuXG4gICAgdGhpcy52YXJUYWcudXBkYXRlKHJlZi50YWcpO1xuXG4gICAgcmV0dXJuIHJlZjtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXREeW5hbWljVmFyKHZtOiBQdWJsaWNWTSwgYXJnczogRXZhbHVhdGVkQXJncywgX3N5bWJvbFRhYmxlOiBTeW1ib2xUYWJsZSk6IFBhdGhSZWZlcmVuY2U8T3BhcXVlPiB7XG4gIGxldCBzY29wZSA9IHZtLmR5bmFtaWNTY29wZSgpO1xuICBsZXQgbmFtZVJlZiA9IGFyZ3MucG9zaXRpb25hbC5hdCgwKTtcblxuICByZXR1cm4gbmV3IER5bmFtaWNWYXJSZWZlcmVuY2Uoc2NvcGUsIG5hbWVSZWYpO1xufVxuXG5leHBvcnQgZGVmYXVsdCAoZ2V0RHluYW1pY1ZhciBhcyBIZWxwZXIpO1xuIl19