"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var expressions_1 = require("../expressions");
var reference_1 = require("@glimmer/reference");
var CompiledLookup = (function (_super) {
    __extends(CompiledLookup, _super);
    function CompiledLookup(base, path) {
        var _this = _super.call(this) || this;
        _this.base = base;
        _this.path = path;
        _this.type = "lookup";
        return _this;
    }
    CompiledLookup.create = function (base, path) {
        if (path.length === 0) {
            return base;
        }
        else {
            return new this(base, path);
        }
    };
    CompiledLookup.prototype.evaluate = function (vm) {
        var _a = this, base = _a.base, path = _a.path;
        return reference_1.referenceFromParts(base.evaluate(vm), path);
    };
    CompiledLookup.prototype.toJSON = function () {
        return this.base.toJSON() + "." + this.path.join('.');
    };
    return CompiledLookup;
}(expressions_1.CompiledExpression));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = CompiledLookup;
var CompiledSelf = (function (_super) {
    __extends(CompiledSelf, _super);
    function CompiledSelf() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CompiledSelf.prototype.evaluate = function (vm) {
        return vm.getSelf();
    };
    CompiledSelf.prototype.toJSON = function () {
        return 'self';
    };
    return CompiledSelf;
}(expressions_1.CompiledExpression));
exports.CompiledSelf = CompiledSelf;
var CompiledSymbol = (function (_super) {
    __extends(CompiledSymbol, _super);
    function CompiledSymbol(symbol, debug) {
        var _this = _super.call(this) || this;
        _this.symbol = symbol;
        _this.debug = debug;
        return _this;
    }
    CompiledSymbol.prototype.evaluate = function (vm) {
        return vm.referenceForSymbol(this.symbol);
    };
    CompiledSymbol.prototype.toJSON = function () {
        return "$" + this.symbol + "(" + this.debug + ")";
    };
    return CompiledSymbol;
}(expressions_1.CompiledExpression));
exports.CompiledSymbol = CompiledSymbol;
var CompiledInPartialName = (function (_super) {
    __extends(CompiledInPartialName, _super);
    function CompiledInPartialName(symbol, name) {
        var _this = _super.call(this) || this;
        _this.symbol = symbol;
        _this.name = name;
        return _this;
    }
    CompiledInPartialName.prototype.evaluate = function (vm) {
        var _a = this, symbol = _a.symbol, name = _a.name;
        var args = vm.scope().getPartialArgs(symbol);
        return args.named.get(name);
    };
    CompiledInPartialName.prototype.toJSON = function () {
        return "$" + this.symbol + "($ARGS)." + this.name;
    };
    return CompiledInPartialName;
}(expressions_1.CompiledExpression));
exports.CompiledInPartialName = CompiledInPartialName;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3Vwcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkBnbGltbWVyL3J1bnRpbWUvbGliL2NvbXBpbGVkL2V4cHJlc3Npb25zL2xvb2t1cHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsOENBQW9EO0FBR3BELGdEQUF3RDtBQUV4RDtJQUE0QyxrQ0FBMEI7SUFXcEUsd0JBQ1UsSUFBZ0MsRUFDaEMsSUFBYztRQUZ4QixZQUlFLGlCQUFPLFNBQ1I7UUFKUyxVQUFJLEdBQUosSUFBSSxDQUE0QjtRQUNoQyxVQUFJLEdBQUosSUFBSSxDQUFVO1FBWmpCLFVBQUksR0FBRyxRQUFRLENBQUM7O0lBZXZCLENBQUM7SUFiTSxxQkFBTSxHQUFiLFVBQWMsSUFBZ0MsRUFBRSxJQUFjO1FBQzVELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0QixNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ2QsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ04sTUFBTSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM5QixDQUFDO0lBQ0gsQ0FBQztJQVNELGlDQUFRLEdBQVIsVUFBUyxFQUFNO1FBQ1QsSUFBQSxTQUFxQixFQUFuQixjQUFJLEVBQUUsY0FBSSxDQUFVO1FBQzFCLE1BQU0sQ0FBQyw4QkFBa0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFFRCwrQkFBTSxHQUFOO1FBQ0UsTUFBTSxDQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFNBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFHLENBQUM7SUFDeEQsQ0FBQztJQUNILHFCQUFDO0FBQUQsQ0FBQyxBQTFCRCxDQUE0QyxnQ0FBa0IsR0EwQjdEOzs7QUFFRDtJQUFrQyxnQ0FBMEI7SUFBNUQ7O0lBUUEsQ0FBQztJQVBDLCtCQUFRLEdBQVIsVUFBUyxFQUFNO1FBQ2IsTUFBTSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsNkJBQU0sR0FBTjtRQUNFLE1BQU0sQ0FBQyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUNILG1CQUFDO0FBQUQsQ0FBQyxBQVJELENBQWtDLGdDQUFrQixHQVFuRDtBQVJZLG9DQUFZO0FBVXpCO0lBQW9DLGtDQUEwQjtJQUM1RCx3QkFBb0IsTUFBYyxFQUFVLEtBQWE7UUFBekQsWUFDRSxpQkFBTyxTQUNSO1FBRm1CLFlBQU0sR0FBTixNQUFNLENBQVE7UUFBVSxXQUFLLEdBQUwsS0FBSyxDQUFROztJQUV6RCxDQUFDO0lBRUQsaUNBQVEsR0FBUixVQUFTLEVBQU07UUFDYixNQUFNLENBQUMsRUFBRSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsK0JBQU0sR0FBTjtRQUNFLE1BQU0sQ0FBQyxNQUFJLElBQUksQ0FBQyxNQUFNLFNBQUksSUFBSSxDQUFDLEtBQUssTUFBRyxDQUFDO0lBQzFDLENBQUM7SUFDSCxxQkFBQztBQUFELENBQUMsQUFaRCxDQUFvQyxnQ0FBa0IsR0FZckQ7QUFaWSx3Q0FBYztBQWMzQjtJQUEyQyx5Q0FBMEI7SUFDbkUsK0JBQW9CLE1BQWMsRUFBVSxJQUFZO1FBQXhELFlBQ0UsaUJBQU8sU0FDUjtRQUZtQixZQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsVUFBSSxHQUFKLElBQUksQ0FBUTs7SUFFeEQsQ0FBQztJQUVELHdDQUFRLEdBQVIsVUFBUyxFQUFNO1FBQ1QsSUFBQSxTQUF1QixFQUFyQixrQkFBTSxFQUFFLGNBQUksQ0FBVTtRQUM1QixJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsc0NBQU0sR0FBTjtRQUNFLE1BQU0sQ0FBQyxNQUFJLElBQUksQ0FBQyxNQUFNLGdCQUFXLElBQUksQ0FBQyxJQUFNLENBQUM7SUFDL0MsQ0FBQztJQUNILDRCQUFDO0FBQUQsQ0FBQyxBQWRELENBQTJDLGdDQUFrQixHQWM1RDtBQWRZLHNEQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9wYXF1ZSB9IGZyb20gJ0BnbGltbWVyL3V0aWwnO1xuaW1wb3J0IHsgQ29tcGlsZWRFeHByZXNzaW9uIH0gZnJvbSAnLi4vZXhwcmVzc2lvbnMnO1xuaW1wb3J0IFZNIGZyb20gJy4uLy4uL3ZtL2FwcGVuZCc7XG5pbXBvcnQgeyBQYXRoUmVmZXJlbmNlIH0gZnJvbSAnQGdsaW1tZXIvcmVmZXJlbmNlJztcbmltcG9ydCB7IHJlZmVyZW5jZUZyb21QYXJ0cyB9IGZyb20gJ0BnbGltbWVyL3JlZmVyZW5jZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbXBpbGVkTG9va3VwIGV4dGVuZHMgQ29tcGlsZWRFeHByZXNzaW9uPE9wYXF1ZT4ge1xuICBwdWJsaWMgdHlwZSA9IFwibG9va3VwXCI7XG5cbiAgc3RhdGljIGNyZWF0ZShiYXNlOiBDb21waWxlZEV4cHJlc3Npb248T3BhcXVlPiwgcGF0aDogc3RyaW5nW10pOiBDb21waWxlZEV4cHJlc3Npb248T3BhcXVlPiB7XG4gICAgaWYgKHBhdGgubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gYmFzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG5ldyB0aGlzKGJhc2UsIHBhdGgpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBiYXNlOiBDb21waWxlZEV4cHJlc3Npb248T3BhcXVlPixcbiAgICBwcml2YXRlIHBhdGg6IHN0cmluZ1tdXG4gICkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBldmFsdWF0ZSh2bTogVk0pOiBQYXRoUmVmZXJlbmNlPE9wYXF1ZT4ge1xuICAgIGxldCB7IGJhc2UsIHBhdGggfSA9IHRoaXM7XG4gICAgcmV0dXJuIHJlZmVyZW5jZUZyb21QYXJ0cyhiYXNlLmV2YWx1YXRlKHZtKSwgcGF0aCk7XG4gIH1cblxuICB0b0pTT04oKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYCR7dGhpcy5iYXNlLnRvSlNPTigpfS4ke3RoaXMucGF0aC5qb2luKCcuJyl9YDtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ29tcGlsZWRTZWxmIGV4dGVuZHMgQ29tcGlsZWRFeHByZXNzaW9uPE9wYXF1ZT4ge1xuICBldmFsdWF0ZSh2bTogVk0pOiBQYXRoUmVmZXJlbmNlPE9wYXF1ZT4ge1xuICAgIHJldHVybiB2bS5nZXRTZWxmKCk7XG4gIH1cblxuICB0b0pTT04oKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ3NlbGYnO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDb21waWxlZFN5bWJvbCBleHRlbmRzIENvbXBpbGVkRXhwcmVzc2lvbjxPcGFxdWU+IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzeW1ib2w6IG51bWJlciwgcHJpdmF0ZSBkZWJ1Zzogc3RyaW5nKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIGV2YWx1YXRlKHZtOiBWTSk6IFBhdGhSZWZlcmVuY2U8T3BhcXVlPiB7XG4gICAgcmV0dXJuIHZtLnJlZmVyZW5jZUZvclN5bWJvbCh0aGlzLnN5bWJvbCk7XG4gIH1cblxuICB0b0pTT04oKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYCQke3RoaXMuc3ltYm9sfSgke3RoaXMuZGVidWd9KWA7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENvbXBpbGVkSW5QYXJ0aWFsTmFtZSBleHRlbmRzIENvbXBpbGVkRXhwcmVzc2lvbjxPcGFxdWU+IHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzeW1ib2w6IG51bWJlciwgcHJpdmF0ZSBuYW1lOiBzdHJpbmcpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgZXZhbHVhdGUodm06IFZNKTogUGF0aFJlZmVyZW5jZTxPcGFxdWU+IHtcbiAgICBsZXQgeyBzeW1ib2wsIG5hbWUgfSA9IHRoaXM7XG4gICAgbGV0IGFyZ3MgPSB2bS5zY29wZSgpLmdldFBhcnRpYWxBcmdzKHN5bWJvbCk7XG4gICAgcmV0dXJuIGFyZ3MubmFtZWQuZ2V0KG5hbWUpO1xuICB9XG5cbiAgdG9KU09OKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIGAkJHt0aGlzLnN5bWJvbH0oJEFSR1MpLiR7dGhpcy5uYW1lfWA7XG4gIH1cbn1cbiJdfQ==