"use strict";
require("./lib/bootstrap");
var template_1 = require("./lib/template");
exports.templateFactory = template_1.default;
exports.TemplateFactory = template_1.TemplateFactory;
exports.Template = template_1.Template;
var references_1 = require("./lib/references");
exports.NULL_REFERENCE = references_1.NULL_REFERENCE;
exports.UNDEFINED_REFERENCE = references_1.UNDEFINED_REFERENCE;
exports.PrimitiveReference = references_1.PrimitiveReference;
exports.ConditionalReference = references_1.ConditionalReference;
var builder_1 = require("./lib/compiled/opcodes/builder");
exports.OpcodeBuilderDSL = builder_1.default;
var compiler_1 = require("./lib/compiler");
exports.CompilableLayout = compiler_1.CompilableLayout;
exports.compileLayout = compiler_1.compileLayout;
var opcode_builder_1 = require("./lib/opcode-builder");
exports.ComponentBuilder = opcode_builder_1.ComponentBuilder;
exports.StaticDefinition = opcode_builder_1.StaticDefinition;
exports.DynamicDefinition = opcode_builder_1.DynamicDefinition;
var blocks_1 = require("./lib/compiled/blocks");
exports.CompiledBlock = blocks_1.CompiledBlock;
exports.CompiledProgram = blocks_1.CompiledProgram;
var attribute_managers_1 = require("./lib/dom/attribute-managers");
exports.IAttributeManager = attribute_managers_1.AttributeManager;
exports.AttributeManager = attribute_managers_1.AttributeManager;
exports.PropertyManager = attribute_managers_1.PropertyManager;
exports.INPUT_VALUE_PROPERTY_MANAGER = attribute_managers_1.INPUT_VALUE_PROPERTY_MANAGER;
exports.defaultManagers = attribute_managers_1.defaultManagers;
exports.defaultAttributeManagers = attribute_managers_1.defaultAttributeManagers;
exports.defaultPropertyManagers = attribute_managers_1.defaultPropertyManagers;
exports.readDOMAttr = attribute_managers_1.readDOMAttr;
var content_1 = require("./lib/compiled/opcodes/content");
exports.normalizeTextValue = content_1.normalizeTextValue;
var expressions_1 = require("./lib/compiled/expressions");
exports.CompiledExpression = expressions_1.CompiledExpression;
var args_1 = require("./lib/compiled/expressions/args");
exports.CompiledArgs = args_1.CompiledArgs;
exports.CompiledNamedArgs = args_1.CompiledNamedArgs;
exports.CompiledPositionalArgs = args_1.CompiledPositionalArgs;
exports.EvaluatedArgs = args_1.EvaluatedArgs;
exports.EvaluatedNamedArgs = args_1.EvaluatedNamedArgs;
exports.EvaluatedPositionalArgs = args_1.EvaluatedPositionalArgs;
var function_1 = require("./lib/compiled/expressions/function");
exports.FunctionExpression = function_1.FunctionExpression;
var get_dynamic_var_1 = require("./lib/helpers/get-dynamic-var");
exports.getDynamicVar = get_dynamic_var_1.default;
var functions_1 = require("./lib/syntax/functions");
exports.BlockMacros = functions_1.Blocks;
exports.InlineMacros = functions_1.Inlines;
exports.NestedBlockSyntax = functions_1.NestedBlockSyntax;
exports.CompileBlockMacro = functions_1.CompileBlockMacro;
exports.compileArgs = functions_1.compileArgs;
exports.setDebuggerCallback = functions_1.setDebuggerCallback;
exports.resetDebuggerCallback = functions_1.resetDebuggerCallback;
exports.debugCallback = functions_1.debugCallback;
var scanner_1 = require("./lib/scanner");
exports.BaselineSyntax = scanner_1.BaselineSyntax;
exports.Layout = scanner_1.Layout;
var vm_1 = require("./lib/vm");
exports.VM = vm_1.PublicVM;
exports.UpdatingVM = vm_1.UpdatingVM;
exports.RenderResult = vm_1.RenderResult;
var upsert_1 = require("./lib/upsert");
exports.SafeString = upsert_1.SafeString;
exports.isSafeString = upsert_1.isSafeString;
var environment_1 = require("./lib/environment");
exports.Scope = environment_1.Scope;
exports.Environment = environment_1.default;
exports.Helper = environment_1.Helper;
exports.DynamicScope = environment_1.DynamicScope;
var partial_1 = require("./lib/partial");
exports.PartialDefinition = partial_1.PartialDefinition;
var interfaces_1 = require("./lib/component/interfaces");
exports.Component = interfaces_1.Component;
exports.ComponentClass = interfaces_1.ComponentClass;
exports.ComponentManager = interfaces_1.ComponentManager;
exports.ComponentDefinition = interfaces_1.ComponentDefinition;
exports.ComponentLayoutBuilder = interfaces_1.ComponentLayoutBuilder;
exports.ComponentAttrsBuilder = interfaces_1.ComponentAttrsBuilder;
exports.isComponentDefinition = interfaces_1.isComponentDefinition;
var interfaces_2 = require("./lib/modifier/interfaces");
exports.ModifierManager = interfaces_2.ModifierManager;
var helper_1 = require("./lib/dom/helper");
exports.DOMChanges = helper_1.default;
exports.IDOMChanges = helper_1.DOMChanges;
exports.DOMTreeConstruction = helper_1.DOMTreeConstruction;
exports.isWhitespace = helper_1.isWhitespace;
exports.insertHTMLBefore = helper_1.insertHTMLBefore;
var Simple = require("./lib/dom/interfaces");
exports.Simple = Simple;
var builder_2 = require("./lib/builder");
exports.ElementStack = builder_2.ElementStack;
exports.ElementOperations = builder_2.ElementOperations;
var bounds_1 = require("./lib/bounds");
exports.Bounds = bounds_1.default;
exports.ConcreteBounds = bounds_1.ConcreteBounds;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJAZ2xpbW1lci9ydW50aW1lL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwyQkFBeUI7QUFFekIsMkNBQXVGO0FBQTlFLHFDQUFBLE9BQU8sQ0FBbUI7QUFBRSxxQ0FBQSxlQUFlLENBQUE7QUFBRSw4QkFBQSxRQUFRLENBQUE7QUFFOUQsK0NBQWlIO0FBQXhHLHNDQUFBLGNBQWMsQ0FBQTtBQUFFLDJDQUFBLG1CQUFtQixDQUFBO0FBQUUsMENBQUEsa0JBQWtCLENBQUE7QUFBRSw0Q0FBQSxvQkFBb0IsQ0FBQTtBQUV0RiwwREFFd0M7QUFEckMscUNBQUEsT0FBTyxDQUFvQjtBQUc5QiwyQ0FHd0I7QUFGdEIsc0NBQUEsZ0JBQWdCLENBQUE7QUFDaEIsbUNBQUEsYUFBYSxDQUFBO0FBR2YsdURBSThCO0FBSDVCLDRDQUFBLGdCQUFnQixDQUFBO0FBQ2hCLDRDQUFBLGdCQUFnQixDQUFBO0FBQ2hCLDZDQUFBLGlCQUFpQixDQUFBO0FBR25CLGdEQUcrQjtBQUY3QixpQ0FBQSxhQUFhLENBQUE7QUFDYixtQ0FBQSxlQUFlLENBQUE7QUFHakIsbUVBU3NDO0FBUnBDLGlEQUFBLGdCQUFnQixDQUFxQjtBQUNyQyxnREFBQSxnQkFBZ0IsQ0FBQTtBQUNoQiwrQ0FBQSxlQUFlLENBQUE7QUFDZiw0REFBQSw0QkFBNEIsQ0FBQTtBQUM1QiwrQ0FBQSxlQUFlLENBQUE7QUFDZix3REFBQSx3QkFBd0IsQ0FBQTtBQUN4Qix1REFBQSx1QkFBdUIsQ0FBQTtBQUN2QiwyQ0FBQSxXQUFXLENBQUE7QUFHYiwwREFFd0M7QUFEdEMsdUNBQUEsa0JBQWtCLENBQUE7QUFHcEIsMERBRW9DO0FBRGxDLDJDQUFBLGtCQUFrQixDQUFBO0FBR3BCLHdEQU95QztBQU52Qyw4QkFBQSxZQUFZLENBQUE7QUFDWixtQ0FBQSxpQkFBaUIsQ0FBQTtBQUNqQix3Q0FBQSxzQkFBc0IsQ0FBQTtBQUN0QiwrQkFBQSxhQUFhLENBQUE7QUFDYixvQ0FBQSxrQkFBa0IsQ0FBQTtBQUNsQix5Q0FBQSx1QkFBdUIsQ0FBQTtBQUd6QixnRUFFNkM7QUFEM0Msd0NBQUEsa0JBQWtCLENBQUE7QUFHcEIsaUVBRXVDO0FBRHJDLDBDQUFBLE9BQU8sQ0FBaUI7QUFHMUIsb0RBU2dDO0FBUjlCLGtDQUFBLE1BQU0sQ0FBZTtBQUNyQixtQ0FBQSxPQUFPLENBQWdCO0FBQ3ZCLHdDQUFBLGlCQUFpQixDQUFBO0FBQ2pCLHdDQUFBLGlCQUFpQixDQUFBO0FBQ2pCLGtDQUFBLFdBQVcsQ0FBQTtBQUNYLDBDQUFBLG1CQUFtQixDQUFBO0FBQ25CLDRDQUFBLHFCQUFxQixDQUFBO0FBQ3JCLG9DQUFBLGFBQWEsQ0FBQTtBQUdmLHlDQUd1QjtBQUZyQixtQ0FBQSxjQUFjLENBQUE7QUFDZCwyQkFBQSxNQUFNLENBQUE7QUFHUiwrQkFBb0U7QUFBM0Qsa0JBQUEsUUFBUSxDQUFNO0FBQUUsMEJBQUEsVUFBVSxDQUFBO0FBQUUsNEJBQUEsWUFBWSxDQUFBO0FBRWpELHVDQUF3RDtBQUEvQyw4QkFBQSxVQUFVLENBQUE7QUFBRSxnQ0FBQSxZQUFZLENBQUE7QUFFakMsaURBSzJCO0FBSnpCLDhCQUFBLEtBQUssQ0FBQTtBQUNMLG9DQUFBLE9BQU8sQ0FBZTtBQUN0QiwrQkFBQSxNQUFNLENBQUE7QUFDTixxQ0FBQSxZQUFZLENBQUE7QUFHZCx5Q0FFdUI7QUFEckIsc0NBQUEsaUJBQWlCLENBQUE7QUFHbkIseURBUW9DO0FBUGxDLGlDQUFBLFNBQVMsQ0FBQTtBQUNULHNDQUFBLGNBQWMsQ0FBQTtBQUNkLHdDQUFBLGdCQUFnQixDQUFBO0FBQ2hCLDJDQUFBLG1CQUFtQixDQUFBO0FBQ25CLDhDQUFBLHNCQUFzQixDQUFBO0FBQ3RCLDZDQUFBLHFCQUFxQixDQUFBO0FBQ3JCLDZDQUFBLHFCQUFxQixDQUFBO0FBR3ZCLHdEQUVtQztBQURqQyx1Q0FBQSxlQUFlLENBQUE7QUFHakIsMkNBQXlJO0FBQWhJLDhCQUFBLE9BQU8sQ0FBYztBQUFFLCtCQUFBLFVBQVUsQ0FBZTtBQUFFLHVDQUFBLG1CQUFtQixDQUFBO0FBQUUsZ0NBQUEsWUFBWSxDQUFBO0FBQUUsb0NBQUEsZ0JBQWdCLENBQUE7QUFDOUcsNkNBQWdEO0FBQ3ZDLHdCQUFNO0FBQ2YseUNBQWdFO0FBQXZELGlDQUFBLFlBQVksQ0FBQTtBQUFFLHNDQUFBLGlCQUFpQixDQUFBO0FBQ3hDLHVDQUFpRTtBQUF4RCwwQkFBQSxPQUFPLENBQVU7QUFBRSxrQ0FBQSxjQUFjLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vbGliL2Jvb3RzdHJhcCc7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgdGVtcGxhdGVGYWN0b3J5LCBUZW1wbGF0ZUZhY3RvcnksIFRlbXBsYXRlIH0gZnJvbSAnLi9saWIvdGVtcGxhdGUnO1xuXG5leHBvcnQgeyBOVUxMX1JFRkVSRU5DRSwgVU5ERUZJTkVEX1JFRkVSRU5DRSwgUHJpbWl0aXZlUmVmZXJlbmNlLCBDb25kaXRpb25hbFJlZmVyZW5jZSB9IGZyb20gJy4vbGliL3JlZmVyZW5jZXMnO1xuXG5leHBvcnQge1xuICAgZGVmYXVsdCBhcyBPcGNvZGVCdWlsZGVyRFNMXG59IGZyb20gJy4vbGliL2NvbXBpbGVkL29wY29kZXMvYnVpbGRlcic7XG5cbmV4cG9ydCB7XG4gIENvbXBpbGFibGVMYXlvdXQsXG4gIGNvbXBpbGVMYXlvdXRcbn0gZnJvbSAnLi9saWIvY29tcGlsZXInO1xuXG5leHBvcnQge1xuICBDb21wb25lbnRCdWlsZGVyLFxuICBTdGF0aWNEZWZpbml0aW9uLFxuICBEeW5hbWljRGVmaW5pdGlvblxufSBmcm9tICcuL2xpYi9vcGNvZGUtYnVpbGRlcic7XG5cbmV4cG9ydCB7XG4gIENvbXBpbGVkQmxvY2ssXG4gIENvbXBpbGVkUHJvZ3JhbVxufSBmcm9tICcuL2xpYi9jb21waWxlZC9ibG9ja3MnO1xuXG5leHBvcnQge1xuICBBdHRyaWJ1dGVNYW5hZ2VyIGFzIElBdHRyaWJ1dGVNYW5hZ2VyLFxuICBBdHRyaWJ1dGVNYW5hZ2VyLFxuICBQcm9wZXJ0eU1hbmFnZXIsXG4gIElOUFVUX1ZBTFVFX1BST1BFUlRZX01BTkFHRVIsXG4gIGRlZmF1bHRNYW5hZ2VycyxcbiAgZGVmYXVsdEF0dHJpYnV0ZU1hbmFnZXJzLFxuICBkZWZhdWx0UHJvcGVydHlNYW5hZ2VycyxcbiAgcmVhZERPTUF0dHJcbn0gZnJvbSAnLi9saWIvZG9tL2F0dHJpYnV0ZS1tYW5hZ2Vycyc7XG5cbmV4cG9ydCB7XG4gIG5vcm1hbGl6ZVRleHRWYWx1ZVxufSBmcm9tICcuL2xpYi9jb21waWxlZC9vcGNvZGVzL2NvbnRlbnQnO1xuXG5leHBvcnQge1xuICBDb21waWxlZEV4cHJlc3Npb25cbn0gZnJvbSAnLi9saWIvY29tcGlsZWQvZXhwcmVzc2lvbnMnO1xuXG5leHBvcnQge1xuICBDb21waWxlZEFyZ3MsXG4gIENvbXBpbGVkTmFtZWRBcmdzLFxuICBDb21waWxlZFBvc2l0aW9uYWxBcmdzLFxuICBFdmFsdWF0ZWRBcmdzLFxuICBFdmFsdWF0ZWROYW1lZEFyZ3MsXG4gIEV2YWx1YXRlZFBvc2l0aW9uYWxBcmdzXG59IGZyb20gJy4vbGliL2NvbXBpbGVkL2V4cHJlc3Npb25zL2FyZ3MnO1xuXG5leHBvcnQge1xuICBGdW5jdGlvbkV4cHJlc3Npb25cbn0gZnJvbSAnLi9saWIvY29tcGlsZWQvZXhwcmVzc2lvbnMvZnVuY3Rpb24nO1xuXG5leHBvcnQge1xuICBkZWZhdWx0IGFzIGdldER5bmFtaWNWYXJcbn0gZnJvbSAnLi9saWIvaGVscGVycy9nZXQtZHluYW1pYy12YXInO1xuXG5leHBvcnQge1xuICBCbG9ja3MgYXMgQmxvY2tNYWNyb3MsXG4gIElubGluZXMgYXMgSW5saW5lTWFjcm9zLFxuICBOZXN0ZWRCbG9ja1N5bnRheCxcbiAgQ29tcGlsZUJsb2NrTWFjcm8sXG4gIGNvbXBpbGVBcmdzLFxuICBzZXREZWJ1Z2dlckNhbGxiYWNrLFxuICByZXNldERlYnVnZ2VyQ2FsbGJhY2ssXG4gIGRlYnVnQ2FsbGJhY2tcbn0gZnJvbSAnLi9saWIvc3ludGF4L2Z1bmN0aW9ucyc7XG5cbmV4cG9ydCB7XG4gIEJhc2VsaW5lU3ludGF4LFxuICBMYXlvdXRcbn0gZnJvbSAnLi9saWIvc2Nhbm5lcic7XG5cbmV4cG9ydCB7IFB1YmxpY1ZNIGFzIFZNLCBVcGRhdGluZ1ZNLCBSZW5kZXJSZXN1bHQgfSBmcm9tICcuL2xpYi92bSc7XG5cbmV4cG9ydCB7IFNhZmVTdHJpbmcsIGlzU2FmZVN0cmluZyB9IGZyb20gJy4vbGliL3Vwc2VydCc7XG5cbmV4cG9ydCB7XG4gIFNjb3BlLFxuICBkZWZhdWx0IGFzIEVudmlyb25tZW50LFxuICBIZWxwZXIsXG4gIER5bmFtaWNTY29wZSxcbn0gZnJvbSAnLi9saWIvZW52aXJvbm1lbnQnO1xuXG5leHBvcnQge1xuICBQYXJ0aWFsRGVmaW5pdGlvblxufSBmcm9tICcuL2xpYi9wYXJ0aWFsJztcblxuZXhwb3J0IHtcbiAgQ29tcG9uZW50LFxuICBDb21wb25lbnRDbGFzcyxcbiAgQ29tcG9uZW50TWFuYWdlcixcbiAgQ29tcG9uZW50RGVmaW5pdGlvbixcbiAgQ29tcG9uZW50TGF5b3V0QnVpbGRlcixcbiAgQ29tcG9uZW50QXR0cnNCdWlsZGVyLFxuICBpc0NvbXBvbmVudERlZmluaXRpb25cbn0gZnJvbSAnLi9saWIvY29tcG9uZW50L2ludGVyZmFjZXMnO1xuXG5leHBvcnQge1xuICBNb2RpZmllck1hbmFnZXJcbn0gZnJvbSAnLi9saWIvbW9kaWZpZXIvaW50ZXJmYWNlcyc7XG5cbmV4cG9ydCB7IGRlZmF1bHQgYXMgRE9NQ2hhbmdlcywgRE9NQ2hhbmdlcyBhcyBJRE9NQ2hhbmdlcywgRE9NVHJlZUNvbnN0cnVjdGlvbiwgaXNXaGl0ZXNwYWNlLCBpbnNlcnRIVE1MQmVmb3JlIH0gZnJvbSAnLi9saWIvZG9tL2hlbHBlcic7XG5pbXBvcnQgICogYXMgU2ltcGxlIGZyb20gJy4vbGliL2RvbS9pbnRlcmZhY2VzJztcbmV4cG9ydCB7IFNpbXBsZSB9O1xuZXhwb3J0IHsgRWxlbWVudFN0YWNrLCBFbGVtZW50T3BlcmF0aW9ucyB9IGZyb20gJy4vbGliL2J1aWxkZXInO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBCb3VuZHMsIENvbmNyZXRlQm91bmRzIH0gZnJvbSAnLi9saWIvYm91bmRzJztcbiJdfQ==