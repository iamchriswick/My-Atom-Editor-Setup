enifed('@glimmer/node/lib/node-dom-helper', ['exports', '@glimmer/runtime'], function (exports, _glimmerRuntime) {
    'use strict';

    function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

    function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

    var NodeDOMTreeConstruction = (function (_DOMTreeConstruction) {
        _inherits(NodeDOMTreeConstruction, _DOMTreeConstruction);

        function NodeDOMTreeConstruction(doc) {
            _classCallCheck(this, NodeDOMTreeConstruction);

            _DOMTreeConstruction.call(this, doc);
        }

        // override to prevent usage of `this.document` until after the constructor

        NodeDOMTreeConstruction.prototype.setupUselessElement = function setupUselessElement() {};

        NodeDOMTreeConstruction.prototype.insertHTMLBefore = function insertHTMLBefore(parent, html, reference) {
            var prev = reference ? reference.previousSibling : parent.lastChild;
            var raw = this.document.createRawHTMLSection(html);
            parent.insertBefore(raw, reference);
            var first = prev ? prev.nextSibling : parent.firstChild;
            var last = reference ? reference.previousSibling : parent.lastChild;
            return new _glimmerRuntime.ConcreteBounds(parent, first, last);
        };

        // override to avoid SVG detection/work when in node (this is not needed in SSR)

        NodeDOMTreeConstruction.prototype.createElement = function createElement(tag) {
            return this.document.createElement(tag);
        };

        // override to avoid namespace shenanigans when in node (this is not needed in SSR)

        NodeDOMTreeConstruction.prototype.setAttribute = function setAttribute(element, name, value) {
            element.setAttribute(name, value);
        };

        return NodeDOMTreeConstruction;
    })(_glimmerRuntime.DOMTreeConstruction);

    exports.default = NodeDOMTreeConstruction;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkBnbGltbWVyL25vZGUvbGliL25vZGUtZG9tLWhlbHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7UUFHYyx1QkFBK0I7a0JBQS9CLHVCQUErQjs7QUFFM0MsaUJBRlksdUJBQStCLENBRS9CLEdBQW9CLEVBQUE7a0NBRnBCLHVCQUErQjs7QUFHekMsNENBQU0sR0FBRyxDQUFDLENBQUM7U0FDWjs7OztBQUpXLCtCQUErQixXQU9qQyxtQkFBbUIsR0FBQSwrQkFBQSxFQUFNOztBQVB2QiwrQkFBK0IsV0FTM0MsZ0JBQWdCLEdBQUEsMEJBQUMsTUFBc0IsRUFBRSxJQUFZLEVBQUUsU0FBc0IsRUFBQTtBQUMzRSxnQkFBSSxJQUFJLEdBQUcsU0FBUyxHQUFHLFNBQVMsQ0FBQyxlQUFlLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQztBQUVwRSxnQkFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNuRCxrQkFBTSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFFcEMsZ0JBQUksS0FBSyxHQUFHLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxVQUFVLENBQUM7QUFDeEQsZ0JBQUksSUFBSSxHQUFHLFNBQVMsR0FBRyxTQUFTLENBQUMsZUFBZSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUM7QUFFcEUsbUJBQU8sb0JBcEJtQyxjQUFjLENBb0I5QixNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ2hEOzs7O0FBbkJXLCtCQUErQixXQXNCM0MsYUFBYSxHQUFBLHVCQUFDLEdBQVcsRUFBQTtBQUN2QixtQkFBTyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUN6Qzs7OztBQXhCVywrQkFBK0IsV0EyQjNDLFlBQVksR0FBQSxzQkFBQyxPQUFnQixFQUFFLElBQVksRUFBRSxLQUFhLEVBQUE7QUFDeEQsbUJBQU8sQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQ25DOztlQTdCVyx1QkFBK0I7dUJBRnBDLG1CQUFtQjs7c0JBRWQsdUJBQStCIiwiZmlsZSI6Im5vZGUtZG9tLWhlbHBlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFNpbXBsZURPTSBmcm9tICdzaW1wbGUtZG9tJztcbmltcG9ydCB7IERPTVRyZWVDb25zdHJ1Y3Rpb24sIEJvdW5kcywgU2ltcGxlLCBDb25jcmV0ZUJvdW5kcyB9IGZyb20gJ0BnbGltbWVyL3J1bnRpbWUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOb2RlRE9NVHJlZUNvbnN0cnVjdGlvbiBleHRlbmRzIERPTVRyZWVDb25zdHJ1Y3Rpb24ge1xuICBwcm90ZWN0ZWQgZG9jdW1lbnQ6IFNpbXBsZURPTS5Eb2N1bWVudDtcbiAgY29uc3RydWN0b3IoZG9jOiBTaW1wbGUuRG9jdW1lbnQpIHtcbiAgICBzdXBlcihkb2MpO1xuICB9XG5cbiAgLy8gb3ZlcnJpZGUgdG8gcHJldmVudCB1c2FnZSBvZiBgdGhpcy5kb2N1bWVudGAgdW50aWwgYWZ0ZXIgdGhlIGNvbnN0cnVjdG9yXG4gIHByb3RlY3RlZCBzZXR1cFVzZWxlc3NFbGVtZW50KCkgeyB9XG5cbiAgaW5zZXJ0SFRNTEJlZm9yZShwYXJlbnQ6IFNpbXBsZS5FbGVtZW50LCBodG1sOiBzdHJpbmcsIHJlZmVyZW5jZTogU2ltcGxlLk5vZGUpOiBCb3VuZHMge1xuICAgIGxldCBwcmV2ID0gcmVmZXJlbmNlID8gcmVmZXJlbmNlLnByZXZpb3VzU2libGluZyA6IHBhcmVudC5sYXN0Q2hpbGQ7XG5cbiAgICBsZXQgcmF3ID0gdGhpcy5kb2N1bWVudC5jcmVhdGVSYXdIVE1MU2VjdGlvbihodG1sKTtcbiAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKHJhdywgcmVmZXJlbmNlKTtcblxuICAgIGxldCBmaXJzdCA9IHByZXYgPyBwcmV2Lm5leHRTaWJsaW5nIDogcGFyZW50LmZpcnN0Q2hpbGQ7XG4gICAgbGV0IGxhc3QgPSByZWZlcmVuY2UgPyByZWZlcmVuY2UucHJldmlvdXNTaWJsaW5nIDogcGFyZW50Lmxhc3RDaGlsZDtcblxuICAgIHJldHVybiBuZXcgQ29uY3JldGVCb3VuZHMocGFyZW50LCBmaXJzdCwgbGFzdCk7XG4gIH1cblxuICAvLyBvdmVycmlkZSB0byBhdm9pZCBTVkcgZGV0ZWN0aW9uL3dvcmsgd2hlbiBpbiBub2RlICh0aGlzIGlzIG5vdCBuZWVkZWQgaW4gU1NSKVxuICBjcmVhdGVFbGVtZW50KHRhZzogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHRoaXMuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0YWcpO1xuICB9XG5cbiAgLy8gb3ZlcnJpZGUgdG8gYXZvaWQgbmFtZXNwYWNlIHNoZW5hbmlnYW5zIHdoZW4gaW4gbm9kZSAodGhpcyBpcyBub3QgbmVlZGVkIGluIFNTUilcbiAgc2V0QXR0cmlidXRlKGVsZW1lbnQ6IEVsZW1lbnQsIG5hbWU6IHN0cmluZywgdmFsdWU6IHN0cmluZykge1xuICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbiAgfVxufVxuIl19