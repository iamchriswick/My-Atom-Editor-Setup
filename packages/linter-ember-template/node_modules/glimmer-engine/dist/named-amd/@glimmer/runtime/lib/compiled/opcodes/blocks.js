enifed('@glimmer/runtime/lib/compiled/opcodes/blocks', ['exports', '@glimmer/runtime/lib/opcodes'], function (exports, _glimmerRuntimeLibOpcodes) {
    'use strict';

    _glimmerRuntimeLibOpcodes.APPEND_OPCODES.add(_glimmerRuntimeLibOpcodes.OpcodeName.OpenBlock, function (vm, _ref) {
        var _getBlock = _ref.op1;
        var _args = _ref.op2;

        var inner = vm.constants.getOther(_getBlock);
        var rawArgs = vm.constants.getExpression(_args);
        var args = null;
        var block = inner.evaluate(vm);
        if (block) {
            args = rawArgs.evaluate(vm);
        }
        // FIXME: can we avoid doing this when we don't have a block?
        vm.pushCallerScope();
        if (block) {
            vm.invokeBlock(block, args || null);
        }
    });
    _glimmerRuntimeLibOpcodes.APPEND_OPCODES.add(_glimmerRuntimeLibOpcodes.OpcodeName.CloseBlock, function (vm) {
        return vm.popScope();
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkBnbGltbWVyL3J1bnRpbWUvbGliL2NvbXBpbGVkL29wY29kZXMvYmxvY2tzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUtBLDhCQUhTLGNBQWMsQ0FHUixHQUFHLENBQUMsMEJBSE0sVUFBVSxDQUdiLFNBQVMsRUFBRSxVQUFDLEVBQUUsRUFBRSxJQUE4QixFQUFBO1lBQXZCLFNBQVMsR0FBaEIsSUFBOEIsQ0FBNUIsR0FBRztZQUFrQixLQUFLLEdBQTVCLElBQThCLENBQVosR0FBRzs7QUFDekQsWUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQW1CLFNBQVMsQ0FBQyxDQUFDO0FBQy9ELFlBQUksT0FBTyxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFlLEtBQUssQ0FBQyxDQUFDO0FBQzlELFlBQUksSUFBSSxHQUEwQixJQUFJLENBQUM7QUFFdkMsWUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUUvQixZQUFJLEtBQUssRUFBRTtBQUNULGdCQUFJLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUM3Qjs7QUFHRCxVQUFFLENBQUMsZUFBZSxFQUFFLENBQUM7QUFFckIsWUFBSSxLQUFLLEVBQUU7QUFDVCxjQUFFLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxJQUFJLElBQUksSUFBSSxDQUFDLENBQUM7U0FDckM7S0FDRixDQUFDLENBQUM7QUFFSCw4QkF0QlMsY0FBYyxDQXNCUixHQUFHLENBQUMsMEJBdEJNLFVBQVUsQ0FzQmIsVUFBVSxFQUFFLFVBQUEsRUFBRTtlQUFJLEVBQUUsQ0FBQyxRQUFRLEVBQUU7S0FBQSxDQUFDLENBQUMiLCJmaWxlIjoiYmxvY2tzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcGlsZWRHZXRCbG9jayB9IGZyb20gJy4uL2V4cHJlc3Npb25zL2hhcy1ibG9jayc7XHJcbmltcG9ydCB7IENvbXBpbGVkQXJncywgRXZhbHVhdGVkQXJncyB9IGZyb20gJy4uL2V4cHJlc3Npb25zL2FyZ3MnO1xyXG5pbXBvcnQgeyBBUFBFTkRfT1BDT0RFUywgT3Bjb2RlTmFtZSBhcyBPcCB9IGZyb20gJy4uLy4uL29wY29kZXMnO1xyXG5pbXBvcnQgeyBPcHRpb24gfSBmcm9tICdAZ2xpbW1lci91dGlsJztcclxuXHJcbkFQUEVORF9PUENPREVTLmFkZChPcC5PcGVuQmxvY2ssICh2bSwgeyBvcDE6IF9nZXRCbG9jaywgb3AyOiBfYXJncyB9KSA9PiB7XHJcbiAgbGV0IGlubmVyID0gdm0uY29uc3RhbnRzLmdldE90aGVyPENvbXBpbGVkR2V0QmxvY2s+KF9nZXRCbG9jayk7XHJcbiAgbGV0IHJhd0FyZ3MgPSB2bS5jb25zdGFudHMuZ2V0RXhwcmVzc2lvbjxDb21waWxlZEFyZ3M+KF9hcmdzKTtcclxuICBsZXQgYXJnczogT3B0aW9uPEV2YWx1YXRlZEFyZ3M+ID0gbnVsbDtcclxuXHJcbiAgbGV0IGJsb2NrID0gaW5uZXIuZXZhbHVhdGUodm0pO1xyXG5cclxuICBpZiAoYmxvY2spIHtcclxuICAgIGFyZ3MgPSByYXdBcmdzLmV2YWx1YXRlKHZtKTtcclxuICB9XHJcblxyXG4gIC8vIEZJWE1FOiBjYW4gd2UgYXZvaWQgZG9pbmcgdGhpcyB3aGVuIHdlIGRvbid0IGhhdmUgYSBibG9jaz9cclxuICB2bS5wdXNoQ2FsbGVyU2NvcGUoKTtcclxuXHJcbiAgaWYgKGJsb2NrKSB7XHJcbiAgICB2bS5pbnZva2VCbG9jayhibG9jaywgYXJncyB8fCBudWxsKTtcclxuICB9XHJcbn0pO1xyXG5cclxuQVBQRU5EX09QQ09ERVMuYWRkKE9wLkNsb3NlQmxvY2ssIHZtID0+IHZtLnBvcFNjb3BlKCkpO1xyXG4iXX0=