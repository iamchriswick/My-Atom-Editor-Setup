enifed("@glimmer/runtime/lib/compiled/blocks", ["exports"], function (exports) {
    "use strict";

    function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    var CompiledBlock = function CompiledBlock(slice) {
        _classCallCheck(this, CompiledBlock);

        this.start = slice[0];
        this.end = slice[1];
        this.slice = slice;
    };

    exports.CompiledBlock = CompiledBlock;

    var CompiledProgram = (function (_CompiledBlock) {
        _inherits(CompiledProgram, _CompiledBlock);

        function CompiledProgram(slice, symbols) {
            _classCallCheck(this, CompiledProgram);

            _CompiledBlock.call(this, slice);
            this.symbols = symbols;
        }

        return CompiledProgram;
    })(CompiledBlock);

    exports.CompiledProgram = CompiledProgram;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkBnbGltbWVyL3J1bnRpbWUvbGliL2NvbXBpbGVkL2Jsb2Nrcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7UUFFTSxhQUFBLEdBS0osU0FMSSxhQUFBLENBS1EsS0FBWSxFQUFBOzhCQUxwQixhQUFBOztBQU1GLFlBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3RCLFlBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BCLFlBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0tBQ3BCOzs7O1FBR0csZUFBdUI7a0JBQXZCLGVBQXVCOztBQUMzQixpQkFESSxlQUF1QixDQUNmLEtBQVksRUFBUyxPQUFlLEVBQUE7a0NBRDVDLGVBQXVCOztBQUV6QixzQ0FBTSxLQUFLLENBQUMsQ0FBQztBQURrQixnQkFBQSxDQUFBLE9BQU8sR0FBUCxPQUFPLENBQVE7U0FFL0M7O2VBSEcsZUFBdUI7T0FBUSxhQUFhIiwiZmlsZSI6ImJsb2Nrcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNsaWNlIH0gZnJvbSAnLi4vb3Bjb2Rlcyc7XG5cbmV4cG9ydCBjbGFzcyBDb21waWxlZEJsb2NrIHtcbiAgcHVibGljIHN0YXJ0OiBudW1iZXI7XG4gIHB1YmxpYyBlbmQ6IG51bWJlcjtcbiAgcHVibGljIHNsaWNlOiBTbGljZTtcblxuICBjb25zdHJ1Y3RvcihzbGljZTogU2xpY2UpIHtcbiAgICB0aGlzLnN0YXJ0ID0gc2xpY2VbMF07XG4gICAgdGhpcy5lbmQgPSBzbGljZVsxXTtcbiAgICB0aGlzLnNsaWNlID0gc2xpY2U7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENvbXBpbGVkUHJvZ3JhbSBleHRlbmRzIENvbXBpbGVkQmxvY2sge1xuICBjb25zdHJ1Y3RvcihzbGljZTogU2xpY2UsIHB1YmxpYyBzeW1ib2xzOiBudW1iZXIpIHtcbiAgICBzdXBlcihzbGljZSk7XG4gIH1cbn1cbiJdfQ==