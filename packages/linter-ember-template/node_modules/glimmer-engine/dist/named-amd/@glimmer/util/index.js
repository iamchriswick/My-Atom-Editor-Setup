enifed('@glimmer/util/index', ['exports', '@glimmer/util/lib/namespaces', '@glimmer/util/lib/platform-utils', '@glimmer/util/lib/assert', '@glimmer/util/lib/logger', '@glimmer/util/lib/object-utils', '@glimmer/util/lib/guid', '@glimmer/util/lib/collections', '@glimmer/util/lib/list-utils', '@glimmer/util/lib/array-utils', '@glimmer/util/lib/weakmap'], function (exports, _glimmerUtilLibNamespaces, _glimmerUtilLibPlatformUtils, _glimmerUtilLibAssert, _glimmerUtilLibLogger, _glimmerUtilLibObjectUtils, _glimmerUtilLibGuid, _glimmerUtilLibCollections, _glimmerUtilLibListUtils, _glimmerUtilLibArrayUtils, _glimmerUtilLibWeakmap) {
  'use strict';

  function _interopExportWildcard(obj, defaults) { var newObj = defaults({}, obj); delete newObj['default']; return newObj; }

  function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

  exports.getAttrNamespace = _glimmerUtilLibNamespaces.getAttrNamespace;

  _defaults(exports, _interopExportWildcard(_glimmerUtilLibPlatformUtils, _defaults));

  exports.assert = _glimmerUtilLibAssert.default;
  exports.LOGGER = _glimmerUtilLibLogger.default;
  exports.Logger = _glimmerUtilLibLogger.Logger;
  exports.LogLevel = _glimmerUtilLibLogger.LogLevel;
  exports.assign = _glimmerUtilLibObjectUtils.assign;
  exports.fillNulls = _glimmerUtilLibObjectUtils.fillNulls;
  exports.ensureGuid = _glimmerUtilLibGuid.ensureGuid;
  exports.initializeGuid = _glimmerUtilLibGuid.initializeGuid;
  exports.HasGuid = _glimmerUtilLibGuid.HasGuid;
  exports.Stack = _glimmerUtilLibCollections.Stack;
  exports.Dict = _glimmerUtilLibCollections.Dict;
  exports.Set = _glimmerUtilLibCollections.Set;
  exports.DictSet = _glimmerUtilLibCollections.DictSet;
  exports.dict = _glimmerUtilLibCollections.dict;
  exports.EMPTY_SLICE = _glimmerUtilLibListUtils.EMPTY_SLICE;
  exports.LinkedList = _glimmerUtilLibListUtils.LinkedList;
  exports.LinkedListNode = _glimmerUtilLibListUtils.LinkedListNode;
  exports.ListNode = _glimmerUtilLibListUtils.ListNode;
  exports.CloneableListNode = _glimmerUtilLibListUtils.CloneableListNode;
  exports.ListSlice = _glimmerUtilLibListUtils.ListSlice;
  exports.Slice = _glimmerUtilLibListUtils.Slice;
  exports.A = _glimmerUtilLibArrayUtils.default;
  exports.HAS_NATIVE_WEAKMAP = _glimmerUtilLibWeakmap.HAS_NATIVE_WEAKMAP;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkBnbGltbWVyL3V0aWwvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztVQUlTLGdCQUFnQiw2QkFBaEIsZ0JBQWdCOzs7O1VBRUwsTUFBTSx5QkFBakIsT0FBTztVQUNJLE1BQU0seUJBQWpCLE9BQU87VUFBWSxNQUFNLHlCQUFOLE1BQU07VUFBRSxRQUFRLHlCQUFSLFFBQVE7VUFFbkMsTUFBTSw4QkFBTixNQUFNO1VBQUUsU0FBUyw4QkFBVCxTQUFTO1VBQ2pCLFVBQVUsdUJBQVYsVUFBVTtVQUFFLGNBQWMsdUJBQWQsY0FBYztVQUFFLE9BQU8sdUJBQVAsT0FBTztVQUVuQyxLQUFLLDhCQUFMLEtBQUs7VUFBRSxJQUFJLDhCQUFKLElBQUk7VUFBRSxHQUFHLDhCQUFILEdBQUc7VUFBRSxPQUFPLDhCQUFQLE9BQU87VUFBRSxJQUFJLDhCQUFKLElBQUk7VUFDL0IsV0FBVyw0QkFBWCxXQUFXO1VBQUUsVUFBVSw0QkFBVixVQUFVO1VBQUUsY0FBYyw0QkFBZCxjQUFjO1VBQUUsUUFBUSw0QkFBUixRQUFRO1VBQUUsaUJBQWlCLDRCQUFqQixpQkFBaUI7VUFBRSxTQUFTLDRCQUFULFNBQVM7VUFBRSxLQUFLLDRCQUFMLEtBQUs7VUFDM0UsQ0FBQyw2QkFBWixPQUFPO1VBQ1Asa0JBQWtCLDBCQUFsQixrQkFBa0IiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIERlc3Ryb3lhYmxlIHtcbiAgZGVzdHJveSgpOiB2b2lkO1xufVxuXG5leHBvcnQgeyBnZXRBdHRyTmFtZXNwYWNlIH0gZnJvbSAnLi9saWIvbmFtZXNwYWNlcyc7XG5leHBvcnQgKiBmcm9tICcuL2xpYi9wbGF0Zm9ybS11dGlscyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGFzc2VydCB9IGZyb20gJy4vbGliL2Fzc2VydCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIExPR0dFUiwgTG9nZ2VyLCBMb2dMZXZlbCB9IGZyb20gJy4vbGliL2xvZ2dlcic7XG5cbmV4cG9ydCB7IGFzc2lnbiwgZmlsbE51bGxzIH0gZnJvbSAnLi9saWIvb2JqZWN0LXV0aWxzJztcbmV4cG9ydCB7IGVuc3VyZUd1aWQsIGluaXRpYWxpemVHdWlkLCBIYXNHdWlkIH0gZnJvbSAnLi9saWIvZ3VpZCc7XG5cbmV4cG9ydCB7IFN0YWNrLCBEaWN0LCBTZXQsIERpY3RTZXQsIGRpY3QgfSBmcm9tICcuL2xpYi9jb2xsZWN0aW9ucyc7XG5leHBvcnQgeyBFTVBUWV9TTElDRSwgTGlua2VkTGlzdCwgTGlua2VkTGlzdE5vZGUsIExpc3ROb2RlLCBDbG9uZWFibGVMaXN0Tm9kZSwgTGlzdFNsaWNlLCBTbGljZSB9IGZyb20gJy4vbGliL2xpc3QtdXRpbHMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBBIH0gZnJvbSAnLi9saWIvYXJyYXktdXRpbHMnO1xuZXhwb3J0IHsgSEFTX05BVElWRV9XRUFLTUFQIH0gZnJvbSAnLi9saWIvd2Vha21hcCc7XG5cbmV4cG9ydCB0eXBlIFRTSVNTVUU8VCwgUyBleHRlbmRzIHN0cmluZz4gPSBUO1xuZXhwb3J0IHR5cGUgRklYTUU8VCwgUyBleHRlbmRzIHN0cmluZz4gPSBUO1xuZXhwb3J0IHR5cGUgVFJVU1Q8VCwgUyBleHRlbmRzIHN0cmluZz4gPSBhbnk7XG4iXX0=