enifed('@glimmer/util/lib/namespaces', ['exports'], function (exports) {
    // There is a small whitelist of namespaced attributes specially
    // enumerated in
    // https://www.w3.org/TR/html/syntax.html#attributes-0
    //
    // > When a foreign element has one of the namespaced attributes given by
    // > the local name and namespace of the first and second cells of a row
    // > from the following table, it must be written using the name given by
    // > the third cell from the same row.
    //
    // In all other cases, colons are interpreted as a regular character
    // with no special meaning:
    //
    // > No other namespaced attribute can be expressed in the HTML syntax.
    'use strict';

    exports.getAttrNamespace = getAttrNamespace;
    var XLINK = 'http://www.w3.org/1999/xlink';
    var XML = 'http://www.w3.org/XML/1998/namespace';
    var XMLNS = 'http://www.w3.org/2000/xmlns/';
    var WHITELIST = {
        'xlink:actuate': XLINK,
        'xlink:arcrole': XLINK,
        'xlink:href': XLINK,
        'xlink:role': XLINK,
        'xlink:show': XLINK,
        'xlink:title': XLINK,
        'xlink:type': XLINK,
        'xml:base': XML,
        'xml:lang': XML,
        'xml:space': XML,
        'xmlns': XMLNS,
        'xmlns:xlink': XMLNS
    };

    function getAttrNamespace(attrName) {
        return WHITELIST[attrName] || null;
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkBnbGltbWVyL3V0aWwvbGliL25hbWVzcGFjZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFjQSxRQUFNLEtBQUssR0FBRyw4QkFBOEIsQ0FBQztBQUM3QyxRQUFNLEdBQUcsR0FBRyxzQ0FBc0MsQ0FBQztBQUNuRCxRQUFNLEtBQUssR0FBRywrQkFBK0IsQ0FBQztBQUU5QyxRQUFNLFNBQVMsR0FBRztBQUNoQix1QkFBZSxFQUFFLEtBQUs7QUFDdEIsdUJBQWUsRUFBRSxLQUFLO0FBQ3RCLG9CQUFZLEVBQUUsS0FBSztBQUNuQixvQkFBWSxFQUFFLEtBQUs7QUFDbkIsb0JBQVksRUFBRSxLQUFLO0FBQ25CLHFCQUFhLEVBQUUsS0FBSztBQUNwQixvQkFBWSxFQUFFLEtBQUs7QUFDbkIsa0JBQVUsRUFBRSxHQUFHO0FBQ2Ysa0JBQVUsRUFBRSxHQUFHO0FBQ2YsbUJBQVcsRUFBRSxHQUFHO0FBQ2hCLGVBQU8sRUFBRSxLQUFLO0FBQ2QscUJBQWEsRUFBRSxLQUFLO0tBQ3JCLENBQUM7O0FBRUksYUFBQSxnQkFBQSxDQUEyQixRQUFnQixFQUFBO0FBQy9DLGVBQU8sU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLElBQUksQ0FBQztLQUNwQyIsImZpbGUiOiJuYW1lc3BhY2VzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlcmUgaXMgYSBzbWFsbCB3aGl0ZWxpc3Qgb2YgbmFtZXNwYWNlZCBhdHRyaWJ1dGVzIHNwZWNpYWxseVxuLy8gZW51bWVyYXRlZCBpblxuLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSL2h0bWwvc3ludGF4Lmh0bWwjYXR0cmlidXRlcy0wXG4vL1xuLy8gPiBXaGVuIGEgZm9yZWlnbiBlbGVtZW50IGhhcyBvbmUgb2YgdGhlIG5hbWVzcGFjZWQgYXR0cmlidXRlcyBnaXZlbiBieVxuLy8gPiB0aGUgbG9jYWwgbmFtZSBhbmQgbmFtZXNwYWNlIG9mIHRoZSBmaXJzdCBhbmQgc2Vjb25kIGNlbGxzIG9mIGEgcm93XG4vLyA+IGZyb20gdGhlIGZvbGxvd2luZyB0YWJsZSwgaXQgbXVzdCBiZSB3cml0dGVuIHVzaW5nIHRoZSBuYW1lIGdpdmVuIGJ5XG4vLyA+IHRoZSB0aGlyZCBjZWxsIGZyb20gdGhlIHNhbWUgcm93LlxuLy9cbi8vIEluIGFsbCBvdGhlciBjYXNlcywgY29sb25zIGFyZSBpbnRlcnByZXRlZCBhcyBhIHJlZ3VsYXIgY2hhcmFjdGVyXG4vLyB3aXRoIG5vIHNwZWNpYWwgbWVhbmluZzpcbi8vXG4vLyA+IE5vIG90aGVyIG5hbWVzcGFjZWQgYXR0cmlidXRlIGNhbiBiZSBleHByZXNzZWQgaW4gdGhlIEhUTUwgc3ludGF4LlxuXG5jb25zdCBYTElOSyA9ICdodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rJztcbmNvbnN0IFhNTCA9ICdodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2UnO1xuY29uc3QgWE1MTlMgPSAnaHR0cDovL3d3dy53My5vcmcvMjAwMC94bWxucy8nO1xuXG5jb25zdCBXSElURUxJU1QgPSB7XG4gICd4bGluazphY3R1YXRlJzogWExJTkssXG4gICd4bGluazphcmNyb2xlJzogWExJTkssXG4gICd4bGluazpocmVmJzogWExJTkssXG4gICd4bGluazpyb2xlJzogWExJTkssXG4gICd4bGluazpzaG93JzogWExJTkssXG4gICd4bGluazp0aXRsZSc6IFhMSU5LLFxuICAneGxpbms6dHlwZSc6IFhMSU5LLFxuICAneG1sOmJhc2UnOiBYTUwsXG4gICd4bWw6bGFuZyc6IFhNTCxcbiAgJ3htbDpzcGFjZSc6IFhNTCxcbiAgJ3htbG5zJzogWE1MTlMsXG4gICd4bWxuczp4bGluayc6IFhNTE5TXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QXR0ck5hbWVzcGFjZShhdHRyTmFtZTogc3RyaW5nKSB7XG4gIHJldHVybiBXSElURUxJU1RbYXR0ck5hbWVdIHx8IG51bGw7XG59Il19