import Meta, { ClassMeta } from './meta';
import { CURRENT_TAG, CONSTANT_TAG, combine } from 'glimmer-reference';
const META = new WeakMap();
const CLASS_META = new WeakMap();
export function classMeta(object) {
    let m = CLASS_META.get(object);
    if (m === undefined) {
        m = new ClassMeta();
        CLASS_META.set(object, m);
    }
    return m;
}
export function meta(object) {
    let m = META.get(object);
    if (m === undefined) {
        m = new Meta();
        META.set(object, m);
    }
    return m;
}
export function set(object, key, value) {
    object[key] = value;
    meta(object).dirty(key);
}
export function root(object) {
    return new VersionedRootReference(object);
}
export class VersionedRootReference {
    constructor(inner) {
        this.inner = inner;
        this.tag = CONSTANT_TAG;
    }
    value() {
        return this.inner;
    }
    get(key) {
        return new VersionedObjectReference(this, key);
    }
}
export class VersionedObjectReference {
    constructor(parent, key) {
        this.parent = parent;
        this.key = key;
        this.tag = CURRENT_TAG;
    }
    value() {
        let { parent, key } = this;
        let parentObject = this.parent.value();
        let computed = classMeta(Object.getPrototypeOf(parentObject)).getComputed(key);
        let tags = [meta(parentObject).tag(key)];
        if (computed) {
            tags.push(...computed.dependentKeys.map(key => path(this, key).tag));
        }
        this.tag = combine(tags);
        return parentObject[key];
    }
    get(key) {
        return new VersionedObjectReference(this, key);
    }
}
function path(parent, key) {
    return key.split('.').reduce((ref, part) => ref.get(part), parent);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVmZXJlbmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL3JlZmVyZW5jZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLElBQUksRUFBRSxFQUFFLFNBQVMsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUd6QyxPQUFPLEVBQ0wsV0FBVyxFQUNYLFlBQVksRUFHWixPQUFPLEVBQ1IsTUFBTSxtQkFBbUIsQ0FBQztBQUkzQixNQUFNLElBQUksR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO0FBQzNCLE1BQU0sVUFBVSxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7QUFFakMsTUFBTSxvQkFBb0IsTUFBdUI7SUFDL0MsSUFBSSxDQUFDLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUUvQixFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztRQUNwQixDQUFDLEdBQUcsSUFBSSxTQUFTLEVBQUUsQ0FBQztRQUNwQixVQUFVLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNYLENBQUM7QUFFRCxNQUFNLGVBQWUsTUFBdUI7SUFDMUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUV6QixFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztRQUNwQixDQUFDLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ1gsQ0FBQztBQUVELE1BQU0sY0FBaUIsTUFBdUIsRUFBRSxHQUFnQixFQUFFLEtBQVE7SUFDeEUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUNwQixJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQzFCLENBQUM7QUFFRCxNQUFNLGVBQTBDLE1BQVM7SUFDdkQsTUFBTSxDQUFDLElBQUksc0JBQXNCLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDNUMsQ0FBQztBQUVELE1BQU07SUFHSixZQUFvQixLQUFRO1FBQVIsVUFBSyxHQUFMLEtBQUssQ0FBRztRQUMxQixJQUFJLENBQUMsR0FBRyxHQUFHLFlBQVksQ0FBQztJQUMxQixDQUFDO0lBRUQsS0FBSztRQUNILE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFFRCxHQUFHLENBQW1CLEdBQWdCO1FBQ3BDLE1BQU0sQ0FBQyxJQUFJLHdCQUF3QixDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNqRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNO0lBR0osWUFBb0IsTUFBc0MsRUFBVSxHQUFnQjtRQUFoRSxXQUFNLEdBQU4sTUFBTSxDQUFnQztRQUFVLFFBQUcsR0FBSCxHQUFHLENBQWE7UUFGN0UsUUFBRyxHQUFnQixXQUFXLENBQUM7SUFFaUQsQ0FBQztJQUV4RixLQUFLO1FBQ0gsSUFBSSxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFDM0IsSUFBSSxZQUFZLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQXFCLENBQUM7UUFFMUQsSUFBSSxRQUFRLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0UsSUFBSSxJQUFJLEdBQWtCLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBRXhELEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDYixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUN2RSxDQUFDO1FBRUQsSUFBSSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDekIsTUFBTSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQsR0FBRyxDQUFDLEdBQWdCO1FBQ2xCLE1BQU0sQ0FBQyxJQUFJLHdCQUF3QixDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNqRCxDQUFDO0NBQ0Y7QUFFRCxjQUFjLE1BQXNDLEVBQUUsR0FBVztJQUMvRCxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxLQUFLLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDckUsQ0FBQyJ9