"use strict";
const glimmer_reference_1 = require("glimmer-reference");
const vm_1 = require("./vm");
const opcodes_1 = require("../../opcodes");
opcodes_1.APPEND_OPCODES.add('PutDynamicPartial', (vm, _symbolTable) => {
    let env = vm.env;
    let symbolTable = vm.constants.getOther(_symbolTable);
    function lookupPartial(name) {
        let normalized = String(name);
        if (!env.hasPartial(normalized, symbolTable)) {
            throw new Error(`Could not find a partial named "${normalized}"`);
        }
        return env.lookupPartial(normalized, symbolTable);
    }
    let reference = glimmer_reference_1.map(vm.frame.getOperand(), lookupPartial);
    let cache = glimmer_reference_1.isConst(reference) ? undefined : new glimmer_reference_1.ReferenceCache(reference);
    let definition = cache ? cache.peek() : reference.value();
    vm.frame.setImmediate(definition);
    if (cache) {
        vm.updateWith(new vm_1.Assert(cache));
    }
});
opcodes_1.APPEND_OPCODES.add('PutPartial', (vm, _definition) => {
    let definition = vm.constants.getOther(_definition);
    vm.frame.setImmediate(definition);
});
opcodes_1.APPEND_OPCODES.add('EvaluatePartial', (vm, _symbolTable, _cache) => {
    let symbolTable = vm.constants.getOther(_symbolTable);
    let cache = vm.constants.getOther(_cache);
    let { template } = vm.frame.getImmediate();
    let block = cache[template.id];
    if (!block) {
        block = template.asPartial(symbolTable);
    }
    vm.invokePartial(block);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFydGlhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYi9jb21waWxlZC9vcGNvZGVzL3BhcnRpYWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHlEQUFpRTtBQUNqRSw2QkFBOEI7QUFJOUIsMkNBQStDO0FBRS9DLHdCQUFjLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLENBQUMsRUFBRSxFQUFFLFlBQVk7SUFDdkQsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQztJQUNqQixJQUFJLFdBQVcsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBYyxZQUFZLENBQUMsQ0FBQztJQUVuRSx1QkFBdUIsSUFBWTtRQUNqQyxJQUFJLFVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFOUIsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDN0MsTUFBTSxJQUFJLEtBQUssQ0FBQyxtQ0FBbUMsVUFBVSxHQUFHLENBQUMsQ0FBQztRQUNwRSxDQUFDO1FBRUQsTUFBTSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsVUFBVSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFRCxJQUFJLFNBQVMsR0FBRyx1QkFBRyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFVLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDbEUsSUFBSSxLQUFLLEdBQUcsMkJBQU8sQ0FBQyxTQUFTLENBQUMsR0FBRyxTQUFTLEdBQUcsSUFBSSxrQ0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzNFLElBQUksVUFBVSxHQUFHLEtBQUssR0FBRyxLQUFLLENBQUMsSUFBSSxFQUFFLEdBQUcsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBRTFELEVBQUUsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRWxDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDVixFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksV0FBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDbkMsQ0FBQztBQUNILENBQUMsQ0FBQyxDQUFDO0FBRUgsd0JBQWMsQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLENBQUMsRUFBRSxFQUFFLFdBQVc7SUFDL0MsSUFBSSxVQUFVLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQTRCLFdBQVcsQ0FBQyxDQUFDO0lBQy9FLEVBQUUsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3BDLENBQUMsQ0FBQyxDQUFDO0FBRUgsd0JBQWMsQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsWUFBWSxFQUFFLE1BQU07SUFDN0QsSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQWMsWUFBWSxDQUFDLENBQUM7SUFDbkUsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQXFCLE1BQU0sQ0FBQyxDQUFDO0lBRTlELElBQUksRUFBRSxRQUFRLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBNkIsQ0FBQztJQUV0RSxJQUFJLEtBQUssR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBRS9CLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNYLEtBQUssR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxFQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzFCLENBQUMsQ0FBQyxDQUFDIn0=