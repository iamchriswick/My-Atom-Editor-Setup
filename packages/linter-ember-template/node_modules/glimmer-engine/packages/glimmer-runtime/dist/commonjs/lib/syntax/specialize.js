"use strict";
const WireFormat = require("glimmer-wire-format");
const glimmer_util_1 = require("glimmer-util");
class Specialize {
    constructor() {
        this.names = glimmer_util_1.dict();
        this.funcs = [];
    }
    add(name, func) {
        this.funcs.push(func);
        this.names[name] = this.funcs.length - 1;
    }
    specialize(sexp, table) {
        let name = sexp[0];
        let index = this.names[name];
        if (index === undefined)
            return sexp;
        let func = this.funcs[index];
        glimmer_util_1.assert(!!func, `expected a specialization for ${sexp[0]}`);
        return func(sexp, table);
    }
}
exports.Specialize = Specialize;
exports.SPECIALIZE = new Specialize();
var E = WireFormat.Expressions;
exports.SPECIALIZE.add('append', (sexp, _symbolTable) => {
    let path = sexp[1];
    if (Array.isArray(path) && (E.isUnknown(path) || E.isGet(path))) {
        if (path[1].length !== 1) {
            return ['unoptimized-append', sexp[1], sexp[2]];
        }
    }
    return ['optimized-append', sexp[1], sexp[2]];
});
exports.SPECIALIZE.add('dynamic-attr', (sexp, _symbolTable) => {
    return ['any-dynamic-attr', sexp[1], sexp[2], sexp[3], false];
});
exports.SPECIALIZE.add('trusting-attr', (sexp, _symbolTable) => {
    return ['any-dynamic-attr', sexp[1], sexp[2], sexp[3], true];
});
exports.SPECIALIZE.add('partial', (sexp, _table) => {
    let expression = sexp[1];
    if (typeof expression === 'string') {
        return ['static-partial', expression];
    }
    else {
        return ['dynamic-partial', expression];
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BlY2lhbGl6ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9zeW50YXgvc3BlY2lhbGl6ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsa0RBQWtEO0FBRWxELCtDQUE0QztBQU81QztJQUFBO1FBQ1UsVUFBSyxHQUFHLG1CQUFJLEVBQVUsQ0FBQztRQUN2QixVQUFLLEdBQXlCLEVBQUUsQ0FBQztJQWlCM0MsQ0FBQztJQWZDLEdBQUcsQ0FBQyxJQUFVLEVBQUUsSUFBd0I7UUFDdEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELFVBQVUsQ0FBQyxJQUFZLEVBQUUsS0FBa0I7UUFDekMsSUFBSSxJQUFJLEdBQVMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3pCLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFN0IsRUFBRSxDQUFDLENBQUMsS0FBSyxLQUFLLFNBQVMsQ0FBQztZQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFFckMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QixxQkFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsaUNBQWlDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDM0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQztDQUNGO0FBbkJELGdDQW1CQztBQUVZLFFBQUEsVUFBVSxHQUFHLElBQUksVUFBVSxFQUFFLENBQUM7QUFHM0MsSUFBTyxDQUFDLEdBQUcsVUFBVSxDQUFDLFdBQVcsQ0FBQztBQUVsQyxrQkFBVSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFjLEVBQUUsWUFBWTtJQUNwRCxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFbkIsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNoRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDekIsTUFBTSxDQUFDLENBQUMsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2xELENBQUM7SUFDSCxDQUFDO0lBRUQsTUFBTSxDQUFDLENBQUMsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hELENBQUMsQ0FBQyxDQUFDO0FBRUgsa0JBQVUsQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLENBQUMsSUFBbUIsRUFBRSxZQUFZO0lBQy9ELE1BQU0sQ0FBQyxDQUFDLGtCQUFrQixFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ2hFLENBQUMsQ0FBQyxDQUFDO0FBRUgsa0JBQVUsQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLENBQUMsSUFBb0IsRUFBRSxZQUFZO0lBQ2pFLE1BQU0sQ0FBQyxDQUFDLGtCQUFrQixFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQy9ELENBQUMsQ0FBQyxDQUFDO0FBRUgsa0JBQVUsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBZSxFQUFFLE1BQU07SUFDaEQsSUFBSSxVQUFVLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRXpCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sVUFBVSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDbkMsTUFBTSxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUFDLElBQUksQ0FBQyxDQUFDO1FBQ04sTUFBTSxDQUFDLENBQUMsaUJBQWlCLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFDekMsQ0FBQztBQUNILENBQUMsQ0FBQyxDQUFDIn0=