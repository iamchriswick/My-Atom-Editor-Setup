"use strict";
const util_1 = require("@glimmer/util");
const builder_1 = require("./builder");
const vm_1 = require("./vm");
const scanner_1 = require("./scanner");
let clientId = 0;
function templateFactory({ id: templateId, meta, block }) {
    let parsedBlock;
    let id = templateId || `client-${clientId++}`;
    let create = (env, envMeta) => {
        let newMeta = envMeta ? util_1.assign({}, envMeta, meta) : meta;
        if (!parsedBlock) {
            parsedBlock = JSON.parse(block);
        }
        return template(parsedBlock, id, newMeta, env);
    };
    return { id, meta, create };
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = templateFactory;
function template(block, id, meta, env) {
    let scanner = new scanner_1.default(block, meta, env);
    let entryPoint;
    let asEntryPoint = () => {
        if (!entryPoint)
            entryPoint = scanner.scanEntryPoint();
        return entryPoint;
    };
    let layout;
    let asLayout = () => {
        if (!layout)
            layout = scanner.scanLayout();
        return layout;
    };
    let asPartial = (symbols) => scanner.scanPartial(symbols);
    let render = (self, appendTo, dynamicScope) => {
        let elementStack = builder_1.ElementStack.forInitialRender(env, appendTo, null);
        let compiled = asEntryPoint().compile(env);
        let vm = vm_1.VM.initial(env, self, dynamicScope, elementStack, compiled.symbols);
        return vm.execute(compiled.slice);
    };
    return { id, meta, _block: block, asEntryPoint, asLayout, asPartial, render };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9saWIvdGVtcGxhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUtBLHdDQUF1QztBQUd2Qyx1Q0FBeUM7QUFDekMsNkJBQTBCO0FBRTFCLHVDQUltQjtBQTZEbkIsSUFBSSxRQUFRLEdBQUcsQ0FBQyxDQUFDO0FBU2pCLHlCQUF3QyxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBd0M7SUFDM0csSUFBSSxXQUFvQyxDQUFDO0lBQ3pDLElBQUksRUFBRSxHQUFHLFVBQVUsSUFBSSxVQUFVLFFBQVEsRUFBRSxFQUFFLENBQUM7SUFDOUMsSUFBSSxNQUFNLEdBQUcsQ0FBQyxHQUFnQixFQUFFLE9BQVk7UUFDMUMsSUFBSSxPQUFPLEdBQUcsT0FBTyxHQUFHLGFBQU0sQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQztRQUN6RCxFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDakIsV0FBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEMsQ0FBQztRQUNELE1BQU0sQ0FBQyxRQUFRLENBQUMsV0FBVyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDakQsQ0FBQyxDQUFDO0lBQ0YsTUFBTSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQztBQUM5QixDQUFDOztBQVhELGtDQVdDO0FBRUQsa0JBQXFCLEtBQThCLEVBQUUsRUFBVSxFQUFFLElBQU8sRUFBRSxHQUFnQjtJQUN4RixJQUFJLE9BQU8sR0FBRyxJQUFJLGlCQUFPLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM1QyxJQUFJLFVBQXNCLENBQUM7SUFDM0IsSUFBSSxZQUFZLEdBQUc7UUFDakIsRUFBRSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUM7WUFBQyxVQUFVLEdBQUcsT0FBTyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3ZELE1BQU0sQ0FBQyxVQUFVLENBQUM7SUFDcEIsQ0FBQyxDQUFDO0lBQ0YsSUFBSSxNQUFjLENBQUM7SUFDbkIsSUFBSSxRQUFRLEdBQUc7UUFDYixFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztZQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDM0MsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNoQixDQUFDLENBQUM7SUFDRixJQUFJLFNBQVMsR0FBRyxDQUFDLE9BQW9CLEtBQUssT0FBTyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUN2RSxJQUFJLE1BQU0sR0FBRyxDQUFDLElBQXdCLEVBQUUsUUFBd0IsRUFBRSxZQUEwQjtRQUMxRixJQUFJLFlBQVksR0FBRyxzQkFBWSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDdEUsSUFBSSxRQUFRLEdBQUcsWUFBWSxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzNDLElBQUksRUFBRSxHQUFHLE9BQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3RSxNQUFNLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQyxDQUFDO0lBQ0YsTUFBTSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxDQUFDO0FBQ2hGLENBQUMifQ==