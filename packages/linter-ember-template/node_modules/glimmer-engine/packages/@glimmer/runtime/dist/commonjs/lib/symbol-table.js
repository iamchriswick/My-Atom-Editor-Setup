"use strict";
const util_1 = require("@glimmer/util");
function entryPoint(meta) {
    return new ProgramSymbolTable(meta);
}
exports.entryPoint = entryPoint;
function layout(meta, wireNamed, wireYields, hasPartials) {
    let { named, yields, partialSymbol, size } = symbols(wireNamed, wireYields, hasPartials);
    return new ProgramSymbolTable(meta, named, yields, partialSymbol, size);
}
exports.layout = layout;
function block(parent, locals) {
    let localsMap = null;
    let program = parent['program'];
    if (locals.length !== 0) {
        let map = localsMap = util_1.dict();
        locals.forEach(l => map[l] = program.size++);
    }
    return new BlockSymbolTable(parent, program, localsMap);
}
exports.block = block;
function symbols(named, yields, hasPartials) {
    let yieldsMap = null;
    let namedMap = null;
    let size = 1;
    if (yields.length !== 0) {
        let map = yieldsMap = util_1.dict();
        yields.forEach(y => map[y] = size++);
    }
    if (named.length !== 0) {
        let map = namedMap = util_1.dict();
        named.forEach(y => map[y] = size++);
    }
    let partialSymbol = hasPartials ? size++ : null;
    return { named: namedMap, yields: yieldsMap, partialSymbol, size };
}
class ProgramSymbolTable {
    constructor(meta, named = null, yields = null, partialArgs = null, size = 1) {
        this.meta = meta;
        this.named = named;
        this.yields = yields;
        this.partialArgs = partialArgs;
        this.size = size;
        this.program = this;
    }
    getMeta() {
        return this.meta;
    }
    getSymbols() {
        return {
            named: this.named,
            yields: this.yields,
            locals: null,
            partialArgs: this.partialArgs
        };
    }
    getSymbol(kind, name) {
        if (kind === 'local')
            return null;
        return this[kind] && this[kind][name];
    }
    getPartialArgs() {
        return this.partialArgs || 0;
    }
}
exports.ProgramSymbolTable = ProgramSymbolTable;
class BlockSymbolTable {
    constructor(parent, program, locals) {
        this.parent = parent;
        this.program = program;
        this.locals = locals;
    }
    getMeta() {
        return this.program.getMeta();
    }
    getSymbols() {
        return {
            named: null,
            yields: null,
            locals: this.locals,
            partialArgs: null
        };
    }
    getSymbol(kind, name) {
        if (kind === 'local') {
            return this.getLocal(name);
        }
        else {
            return this.program.getSymbol(kind, name);
        }
    }
    getLocal(name) {
        let { locals, parent } = this;
        let symbol = locals && locals[name];
        if (!symbol && parent) {
            symbol = parent.getSymbol('local', name);
        }
        return symbol;
    }
    getPartialArgs() {
        return this.program.getPartialArgs();
    }
}
exports.BlockSymbolTable = BlockSymbolTable;
exports.EMPTY_SYMBOL_TABLE = {
    getMeta() {
        return null;
    },
    getSymbols() {
        return {
            named: null,
            yields: null,
            locals: null,
            partialArgs: null
        };
    },
    getSymbol(_kind, _name) {
        throw new Error("BUG: Calling getSymbol on EMPTY_SYMBOL_TABLE");
    },
    getPartialArgs() {
        return null;
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ltYm9sLXRhYmxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL3N5bWJvbC10YWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0NBQW1EO0FBU25ELG9CQUEyQixJQUEwQjtJQUNuRCxNQUFNLENBQUMsSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN0QyxDQUFDO0FBRkQsZ0NBRUM7QUFFRCxnQkFBdUIsSUFBa0IsRUFBRSxTQUFtQixFQUFFLFVBQW9CLEVBQUUsV0FBb0I7SUFDeEcsSUFBSSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsYUFBYSxFQUFFLElBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ3pGLE1BQU0sQ0FBQyxJQUFJLGtCQUFrQixDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUMxRSxDQUFDO0FBSEQsd0JBR0M7QUFFRCxlQUFzQixNQUFtQixFQUFFLE1BQWdCO0lBQ3pELElBQUksU0FBUyxHQUF5QixJQUFJLENBQUM7SUFDM0MsSUFBSSxPQUFPLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBRWhDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4QixJQUFJLEdBQUcsR0FBRyxTQUFTLEdBQUcsV0FBSSxFQUFVLENBQUM7UUFDckMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBSSxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0FBQzFELENBQUM7QUFWRCxzQkFVQztBQUVELGlC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