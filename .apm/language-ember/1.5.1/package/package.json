{"name":"language-ember","version":"1.5.1","description":"Atom Grammer Package for Ember Applications","engines":{"atom":"*"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/DHedgecock/language-ember.git"},"keywords":["Ember","Atom","Grammar"],"author":{"name":"Dan Hedgecock"},"license":"MIT","bugs":{"url":"https://github.com/DHedgecock/language-ember/issues"},"homepage":"https://github.com/DHedgecock/language-ember#readme","readme":"# Ember HTMLBars Highlighting\n\nThis package provides HMLBars/Glimmer syntax highlighting for template (`.hbs`)\nfiles as well as inline template declaration in JS files.\n\n### Template File Highlighting\n\nTo activate syntax highlighting in template files select `Ember HTMLBars` as the language.\n\n### Inline Template Highlighting\n\n##### With `language-babel`\n\nIf you're using the [language-babel](https://github.com/gandm/language-babel)\npackage you can continue using `language-babel` to highlight your JavaScript and\nadd support for inline templates using the _JavaScript Tagged Template Literal\nGrammar Extensions_ feature in `language-babel`. This feature adds syntax\nhighlighting to any tagged template strings preceded by a pattern you specify.\nSimply add:\n\n`hbs:source.htmlbars`\n\n**`language-babel` has a 10 second debounce on generating new grammar extensions,\n  be sure to wait until the confirmation notice pops up!**\n\n_(This will target any template literal with `hbs` preceding it, and apply the\n  `source.htmlbars` grammar to the contents.)_\n\n##### Without `language-babel`\n\nIf you're not using the language-babel extension, then select`ES6\nJavaScript (Babel) + JSX && Ember HTMLBars` as your JS default language.\n\n### Using Inline Template Declaration\n\nEmber component test files are automatically generated set up for the tagged template string syntax, eg:\n\n```javascript\nthis.render(hbs`\n  {{#some-component}}\n    Syntax highlighting is the best.\n  {{/some-component}}\n`);\n```\n\nYou can also declare templates for components using a tagged template string and the `layout` property:\n\n```javascript\nimport Ember from 'ember';\nimport hbs from 'htmlbars-inline-precompile';\n\nexport default Ember.component.extend({\n  // Component layout using tagged template string:\n  layout: hbs`\n    <span>Hello there, {{name}}</span>\n  `\n});\n```\n\n### Features\n\n- Maintains [language-babel](https://github.com/gandm/language-babel) ES6 && JSX syntax highlighting\n- HTMLBars Comment Block Bindings on `Cmd + /`\n- Unescaped output (triple curlies) is flagged with wrapping `.unescaped.block.htmlbars`\n- Property/Component/Helper names flagged as `string.of.property.function.component.name.htmlbars`\n- All framework Ember helpers flagged as `support.function.builtin.inline.htmlbars`\n\n![Screenshot](https://raw.githubusercontent.com/DHedgecock/language-ember/master/screenshot.png)\n\nSee `CONTRIBUTING.md` for technical details.\n\n### Thank You\nThank you [language-babel](https://github.com/gandm/language-babel) and [language-ember-htmlbars](https://github.com/jmurphyau/language-ember-htmlbars) for the regex patterns.\n","readmeFilename":"README.md","_id":"language-ember@1.5.1","_shasum":"ee931afbde4192e073f9cd9c4cb73b0f005269d3","_resolved":"file:../d-11704-15638-1w4q344/package.tgz","_from":"../d-11704-15638-1w4q344/package.tgz"}